threshold = -2,
compare_all_genes = FALSE,
normalisation = "tumours.with.event",
column_start = 11){
############
### Create a long datafame of co-deletions 2.5MB upstream and downstream of gene of interest.
##Create co-deletion matricies for each target gene
co.deletion.per.target.gene<- lapply(gene_information_list, function(x) co.deletion_co.amplification_matrix(cnv.table = cnv.table, column_start = column_start, threshold = threshold, start = TRUE, Chromosome = x[[2]], selection_criteria = c(x[[4]] - distance, x[[5]] + distance), deletion = deletion, normalisation = normalisation))
##Add gene name to each column to be used with gather function later
co.deletion.per.target.gene<- lapply(co.deletion.per.target.gene, function(x) as.data.frame(cbind(Gene.Symbol.row = rownames(x), x)))
##Create a long 3 column wide table with pair-wise proportion of pair wise deletions
gathered<- lapply(co.deletion.per.target.gene, function(x) tidyr::gather(x, Gene.Symbol.col,proportion, 2:ncol(x)))
##Keep rows relating to MET v's all genes only and not all genes v's all genes
if (compare_all_genes == FALSE){
gathered_target_genes<- vector("list", length(gene_information_list))
for(i in 1: length(gene_information_list)){
gene<- gene_information_list[[i]][1]
gathered_target_genes[[i]]<- gathered[[i]] %>%
dplyr::filter(Gene.Symbol.col == gene)
}
} else if (compare_all_genes == TRUE){
gathered_target_genes<- gathered
}
##Bind all dataframes in list together
gathered.co.deletion.per.target.gene<- do.call(rbind, gathered_target_genes)
############
### Create a dataframe of gene distances from gene of interest.
if (compare_all_genes == FALSE){
distance_from_target_gene_table<- lapply(gene_information_list, function(x) distance_from_target_gene_function(cnv.table = cnv.table, gene_information = x, distance = distance))
##Bind all dataframes in list together
distance_between_genes_table<- do.call(rbind, distance_from_target_gene_table)
} else if (compare_all_genes == TRUE){
intergene_distance_table_function<- function(cnv.table, gene_information, distance){
selected_genes_start<- cnv.table %>%
dplyr::filter(CHR == gene_information[[2]]) %>%
dplyr::filter(start >=  gene_information[[4]] - distance, end <= gene_information[[5]] + distance ) %>%
dplyr::select(start)
intergene_distance_table <- data.frame(matrix(NA, ncol = nrow(selected_genes_start), nrow = nrow(selected_genes_start)))
for (j in 1:nrow(selected_genes_start)) {
intergene_distance_table[,j]<- abs(selected_genes_start[,1] - selected_genes_start[j,1])
}
Gene_Symbol<- cnv.table %>%
dplyr::filter(CHR == gene_information[[2]]) %>%
dplyr::filter(start >=  gene_information[[4]] - distance, end <= gene_information[[5]] + distance ) %>%
dplyr::select(Gene.Symbol) %>%
t() %>% #required to convert output from data.frame to vector
as.character()
colnames(intergene_distance_table)<- Gene_Symbol
rownames(intergene_distance_table)<- Gene_Symbol
return(intergene_distance_table)
}
intergene_distance_table<- lapply(gene_information_list, function(x) intergene_distance_table_function(cnv.table = cnv.table, gene_information = x, distance = distance))
##Add gene name to each column to be used with gather function later
intergene_distance_table<- lapply(intergene_distance_table, function(x) as.data.frame(cbind(Gene.Symbol.row = rownames(x), x)))
##Add target gene to each column to be used with gather function later
for (i in 1: length(gene_information_list)){
intergene_distance_table[[i]]<- cbind(gene_information_list[[i]][[1]], intergene_distance_table[[i]])
}
#intergene_distance_table<- lapply(intergene_distance_table, function(x) as.data.frame(cbind(Target_gene = (x), x)))
##Create a long 3 column wide table with pair-wise proportion of pair wise deletions
gathered<- lapply(intergene_distance_table, function(x) tidyr::gather(x, Gene.Symbol.col,proportion, 3:ncol(x)))
##Bind all dataframes in list together
distance_between_genes_table<- do.call(rbind, gathered)
}
###########
### join pair-wise distance table to pair-wise proportion of co-deletions table:
if (compare_all_genes == FALSE){
co_deletions_distance_from_target_gene_plot_table<- cbind(proportion_of_co_deletion = gathered.co.deletion.per.target.gene, distance_from_target_gene = distance_between_genes_table)
colnames(co_deletions_distance_from_target_gene_plot_table)<- c("Comparison_gene", "Target_gene", "proportion_co_del_amp", "distance_from_target_genes")
} else if (compare_all_genes == TRUE) {
co_deletions_distance_from_target_gene_plot_table<- cbind(distance_from_target_gene = distance_between_genes_table, proportion_of_co_deletion = gathered.co.deletion.per.target.gene)
colnames(co_deletions_distance_from_target_gene_plot_table)<- c("Target_gene", "Comparison_gene1", "Comparison_gene2", "distance", "Comparison_gene1_again", "Comparison_gene2_again", "proportion_of_co_deletion")
}
return(co_deletions_distance_from_target_gene_plot_table)
}
cnv.table<-threshold_selected_cnv_list_plus_all_loc$ACC
gene_information_list<- gene_information_long_significant_list
co_deletions_distance_from_target_gene_plot_table2<- distance_from_target_gene_co_deletion_co_amplification_function(cnv.table = cnv.table, gene_information_list = gene_information_list, distance = 2.5e+06, deletion = TRUE, threshold = -2, compare_all_genes = FALSE, normalisation = "tumours.with.event")
dim(co_deletions_distance_from_target_gene_plot_table2)
length(unique(fishers_co_deletion_per_gene_long_table_significanct_p0.05_more_than_20$target_gene))
unique(fishers_co_deletion_per_gene_long_table_significanct_p0.05_more_than_20$target_gene)
target_gene_names<- sapply(gene_information_long_list, function(x) x[[1]])
target_gene_names
target_gene_index<- which(target_gene_names %in% unique(fishers_co_deletion_per_gene_long_table_significanct_p0.05_more_than_20$target_gene))
length(target_gene_index)
target_gene_index<- target_gene_index[c(1:30,32:34, 36:49)]
target_gene_index
length(target_gene_index)
gene_information_long_significant_list<- gene_information_long_list[target_gene_index]
length(gene_information_long_significant_list)
cnv.table<-threshold_selected_cnv_list_plus_all_loc$ALL
co_deletions_distance_from_target_gene_plot_table<- distance_from_target_gene_co_deletion_co_amplification_function(cnv.table = cnv.table, gene_information_list = gene_information_long_significant_list, distance = 2.5e+06, deletion = TRUE, threshold = -2, compare_all_genes = FALSE, normalisation = "tumours.with.event")
dim(co_deletions_distance_from_target_gene_plot_table)
head(co_deletions_distance_from_target_gene_plot_table)
tail(co_deletions_distance_from_target_gene_plot_table)
class(co_deletions_distance_from_target_gene_plot_table$proportion_co_del_amp)
unique(co_deletions_distance_from_target_gene_plot_table$Target_gene)
mean_co_deletion_co_amplification_values_around_gene<- function(co_deletion_table,
distance_from_gene_to_calculate_mean){
n<- distance_from_gene_to_calculate_mean
result<-rep(NA, nrow(co_deletion_table))
for(i in 1: nrow(co_deletion_table)){
if(i < n){
start<- i
end<- i+n
result[i]<- mean(co_deletion_table[i, start:end])
} else if((i >= n) & (i+n-1 < ncol(co_deletion_table))) {
start<- i-n
end<- i+n
result[i]<- mean(co_deletion_table[i, start:end])
} else if(i+n > ncol(co_deletion_table)) {
start<- i-n
end<- ncol(co_deletion_table)
result[i]<- mean(co_deletion_table[i, start:end])
}
}
return(result)
}
distance<- 2.5e+06
length(gene_information_list)
distance<- 2.5e+06
co.deletion.per.target.gene<- lapply(gene_information_list, function(x) co.deletion_co.amplification_matrix(cnv.table, column_start = 11, threshold = -2, start = TRUE, Chromosome = x[[2]], selection_criteria = c(x[[4]] - distance, x[[5]] + distance), deletion = TRUE, normalisation = "tumours.with.event"))
length(co.deletion.per.target.gene)
co.deletion.per.target.gene[[2]]
test<- mean_co_deletion_co_amplification_values_around_gene(co.deletion.per.target.gene[[2]], 1)
test
length(test)
dim(co.deletion.per.target.gene[[2]])
co_deletion_around_target_gene<- lapply(co.deletion.per.target.gene, function(x) mean_co_deletion_co_amplification_values_around_gene(x,1))
length(co_deletion_around_target_gene)
co_deletion_around_target_gene[[2]]
identical(test, co_deletion_around_target_gene[[2]])
co_deletion_around_target_gene2<- lapply(co.deletion.per.target.gene, function(x) mean_co_deletion_co_amplification_values_around_gene(x,2))
length(co_deletion_around_target_gene2)
co_deletion_around_target_gene2[[2]]
co_deletion_around_target_gene<- unlist(co_deletion_around_target_gene)
co_deletion_around_target_gene
co_deletion_around_target_gene2<- unlist(co_deletion_around_target_gene2)
co_deletion_around_target_gene2
length(co_deletion_around_target_gene)
dim(co_deletions_distance_from_target_gene_plot_table)
co_deletions_distance_from_target_gene_plot_table<- cbind(co_deletions_distance_from_target_gene_plot_table, co_deletion_around_target_gene)
dim(co_deletions_distance_from_target_gene_plot_table)
head(co_deletions_distance_from_target_gene_plot_table)
tail(co_deletions_distance_from_target_gene_plot_table)
co_deletions_distance_from_target_gene_plot_table<- cbind(co_deletions_distance_from_target_gene_plot_table, co_deletion_around_target_gene2)
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x=Comparison_gene, group = Target_gene)) +
geom_point(aes(y = as.numeric(proportion_co_del_amp), colour = "Co-deletion with target gene"), size = 0.5, shape = 1) +
geom_line(aes(y = as.numeric(proportion_co_del_amp), colour = "Co-deletion with target gene")) +
geom_point(aes(y = as.numeric(co_deletion_around_target_gene2), colour = "Mean co-deletion for genes 2 gene away"), size = 0.5, shape = 1) +
geom_line(aes(y = as.numeric(co_deletion_around_target_gene2), colour = "Mean co-deletion for genes 2 gene away")) +
#facet_wrap(~Target_gene, nrow = 1, scales = "free_x") +
facet_wrap(~Target_gene, scales = "free_x",  ncol = 4) +
#theme(legend.position="none") +
theme(legend.position="bottom") +
xlab("Gene") +
ylab("Proportion of co-deletions in tumours with any deletion within loci") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5, size = 5))
ggsave("ALL_co-deletion_distance_2genesaway_lineplot.tiff",width = 20, height = 20, dpi = 300)
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x=Comparison_gene, group = Target_gene)) +
geom_point(aes(y = as.numeric(proportion_co_del_amp), colour = "Co-deletion with target gene"), size = 0.5, shape = 1) +
geom_line(aes(y = as.numeric(proportion_co_del_amp), colour = "Co-deletion with target gene")) +
geom_point(aes(y = as.numeric(co_deletion_around_target_gene2), colour = "Mean co-deletion for genes 2 gene away"), size = 0.5, shape = 1) +
geom_line(aes(y = as.numeric(co_deletion_around_target_gene2), colour = "Mean co-deletion for genes 2 gene away")) +
#facet_wrap(~Target_gene, nrow = 1, scales = "free_x") +
facet_wrap(~Target_gene, scales = "free_x",  ncol = 3) +
#theme(legend.position="none") +
theme(legend.position="bottom") +
xlab("Gene") +
ylab("Proportion of co-deletions in tumours with any deletion within loci") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5, size = 5))
ggsave("ALL_co-deletion_distance_2genesaway_lineplot.tiff",width = 20, height = 25, dpi = 300)
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x=Comparison_gene, group = Target_gene)) +
geom_point(aes(y = as.numeric(proportion_co_del_amp), colour = "Co-deletion with target gene"), size = 0.5, shape = 1) +
geom_line(aes(y = as.numeric(proportion_co_del_amp), colour = "Co-deletion with target gene")) +
geom_point(aes(y = as.numeric(co_deletion_around_target_gene2), colour = "Mean co-deletion for genes 2 gene away"), size = 0.5, shape = 1) +
geom_line(aes(y = as.numeric(co_deletion_around_target_gene2), colour = "Mean co-deletion for genes 2 gene away")) +
#facet_wrap(~Target_gene, nrow = 1, scales = "free_x") +
facet_wrap(~Target_gene, scales = "free_x",  ncol = 3) +
#theme(legend.position="none") +
theme(legend.position="bottom") +
xlab("Gene") +
ylab("Proportion of co-deletions in tumours with any deletion within loci") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5, size = 5))
ggsave("ALL_co-deletion_distance_2genesaway_lineplot.tiff",width = 18, height = 25, dpi = 300)
immune_cell_infiltrate_annova_per_cancer_list<- readRDS(file = "./R workspaces/immune_cell_infiltrate_annova_per_cancer_list")
head(immune_cell_infiltrate_annova_per_cancer_list[[1]])
length(immune_cell_infiltrate_annova_per_cancer_list)
names(immune_cell_infiltrate_annova_per_cancer_list)
colnames(immune_cell_infiltrate_annova_per_cancer_list[[1]])
dim(immune_cell_infiltrate_annova_per_cancer_list[[1]])
immune_cell_infiltrate_annova_per_cancer_list[[20]][1:10,]
names(immune_cell_infiltrate_annova_per_cancer_list[1])
sapply(immune_cell_infiltrate_annova_per_cancer_list, function(x) x$cancer[1])
immune_cell_infiltrate_annova_per_cancer_list[[20]] %>%
dplyr::filter(target_gene == "CDKN2A") %>%
dplyr::select(number_cat1, number_cat2, number_cat3, number_cat4)
immune_cell_infiltrate_annova_per_cancer_list[[20]]$cancer<- rep("ALL", nrow(immune_cell_infiltrate_annova_per_cancer_list[[20]]))
sapply(immune_cell_infiltrate_annova_per_cancer_list, function(x) x$cancer[1])
immune_cell_infiltrate_annova_per_cancer_list[[20]][1:10,]
immune_cell_infiltrate_annova_per_cancer_table<- do.call(rbind, immune_cell_infiltrate_annova_per_cancer_list[1:19])
dim(immune_cell_infiltrate_annova_per_cancer_list)
dim(immune_cell_infiltrate_annova_per_cancer_table)
unique(immune_cell_infiltrate_annova_per_cancer_table$cancer)
immune_cell_types<- unique(immune_cell_infiltrate_annova_per_cancer_table$cell_type)
length(immune_cell_types)
immune_cell_types
immune_cell_infiltrate_annova_per_cell_type_list<- vector("list", length(immune_cell_types))
immune_cell_infiltrate_annova_per_cell_type_list
for (i in 1: length(immune_cell_types)){
immune_cell_infiltrate_annova_per_cell_type_list[[i]]<- immune_cell_infiltrate_annova_per_cancer_table %>%
dplyr::filter(cell_type == immune_cell_types[i])
}
for (i in 1: length(immune_cell_infiltrate_annova_per_cell_type_list)){
immune_table<- immune_cell_infiltrate_annova_per_cell_type_list[[i]]
immune_table$BH_adjust_ANOVA<- p.adjust(immune_table$ANOVA_p_value, method = "BH")
immune_table$BH_adjust_cat2_1<- p.adjust(immune_table$p_value_cat2_1, method = "BH")
immune_table$BH_adjust_cat3_1<- p.adjust(immune_table$p_value3_1, method = "BH")
immune_table$BH_adjust_cat4_1<- p.adjust(immune_table$p_value4_1, method = "BH")
immune_table$BH_adjust_cat3_2<- p.adjust(immune_table$p_value3_2, method = "BH")
immune_table$BH_adjust_cat4_2<- p.adjust(immune_table$p_value4_2, method = "BH")
immune_table$BH_adjust_Cat4_3<- p.adjust(immune_table$p_value4_3, method = "BH")
immune_table<- dplyr::arrange(immune_table, BH_adjust_cat2_1)
immune_cell_infiltrate_annova_per_cell_type_list[[i]]<- immune_table
}
immune_cell_infiltrate_annova_per_cancer_all_table<- immune_cell_infiltrate_annova_per_cancer_list[[20]]
dim(immune_cell_infiltrate_annova_per_cancer_all_table)
immune_cell_types<- unique(immune_cell_infiltrate_annova_per_cancer_all_table$cell_type)
length(immune_cell_types)
immune_cell_types
immune_cell_infiltrate_annova_per_cell_type_all_list<- vector("list", length(immune_cell_types))
immune_cell_infiltrate_annova_per_cell_type_all_list
for (i in 1: length(immune_cell_types)){
immune_cell_infiltrate_annova_per_cell_type_all_list[[i]]<- immune_cell_infiltrate_annova_per_cancer_all_table %>%
dplyr::filter(cell_type == immune_cell_types[i])
}
length(immune_cell_infiltrate_annova_per_cell_type_all_list)
dim(immune_cell_infiltrate_annova_per_cell_type_all_list[[1]])
for (i in 1: length(immune_cell_infiltrate_annova_per_cell_type_list)){
immune_table<- immune_cell_infiltrate_annova_per_cell_type_all_list[[i]]
immune_table$BH_adjust_ANOVA<- p.adjust(immune_table$ANOVA_p_value, method = "BH")
immune_table$BH_adjust_cat2_1<- p.adjust(immune_table$p_value_cat2_1, method = "BH")
immune_table$BH_adjust_cat3_1<- p.adjust(immune_table$p_value3_1, method = "BH")
immune_table$BH_adjust_cat4_1<- p.adjust(immune_table$p_value4_1, method = "BH")
immune_table$BH_adjust_cat3_2<- p.adjust(immune_table$p_value3_2, method = "BH")
immune_table$BH_adjust_cat4_2<- p.adjust(immune_table$p_value4_2, method = "BH")
immune_table$BH_adjust_Cat4_3<- p.adjust(immune_table$p_value4_3, method = "BH")
immune_table<- dplyr::arrange(immune_table, BH_adjust_cat2_1)
immune_cell_infiltrate_annova_per_cell_type_all_list[[i]]<- immune_table
}
unique(immune_cell_infiltrate_annova_per_cell_type_list[[1]]$cancer)
dim(immune_cell_infiltrate_annova_per_cell_type_list[[1]])
dim(immune_cell_infiltrate_annova_per_cell_type_all_list[[1]])
for (i in 1: length(immune_cell_infiltrate_annova_per_cell_type_list)) {
immune_cell_infiltrate_annova_per_cell_type_list[[i]]<- rbind(immune_cell_infiltrate_annova_per_cell_type_list[[i]],
immune_cell_infiltrate_annova_per_cell_type_all_list[[i]])
}
dim(immune_cell_infiltrate_annova_per_cell_type_list[[1]])
unique(immune_cell_infiltrate_annova_per_cell_type_list[[1]]$cancer)
sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) unique(x$cell_type))
lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) unique(x$cancer))
sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) unique(x$cell_type))
colnames(immune_cell_infiltrate_annova_per_cell_type_list[[1]])
sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) sum(x$BH_adjust_cat2_1 <= 0.05, na.rm = TRUE))
sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) sum(x$BH_adjust_cat2_1 <= 0.1, na.rm = TRUE))
sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) sum(x$BH_adjust_cat2_1 <= 0.1, na.rm = TRUE))
sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) sum(x$BH_adjust_cat2_1 <= 0.1 & x$number_cat1 >= 20, na.rm = TRUE))
sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) sum(x$BH_adjust_cat2_1 <= 0.1 & x$number_cat1 >= 20 & x$number_cat2 >= 20, na.rm = TRUE))
input_table = immune_cell_infiltrate_annova_per_cell_type_list[[1]]
p_value = 0.05
significant_selection<- function(input_table, p_value){
output_table<- input_table %>%
#dplyr::filter(as.name(filter1) <= p_value) %>%
dplyr::filter(BH_adjust_cat2_1 <= p_value) %>%
dplyr::filter(number_cat1 >= 20 & number_cat2 >= 20) %>%
dplyr::arrange(BH_adjust_cat2_1)
}
sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) sum(x$BH_adjust_cat2_1 <= 0.05 & x$number_cat1 >= 20 & x$number_cat2 >= 20, na.rm = TRUE))
sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) sum(x$BH_adjust_cat2_1 <= 0.1 & x$number_cat1 >= 20 & x$number_cat2 >= 20, na.rm = TRUE))
immune_cell_infiltrate_annova_per_cell_type_significant_list<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) significant_selection(x, 0.1))
sapply(immune_cell_infiltrate_annova_per_cell_type_significant_list, function(x) nrow(x))
sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) unique(x$cell_type))
bar_plot1<- sapply(immune_cell_infiltrate_annova_per_cell_type_significant_list, function(x) nrow(x))
bar_plot2<- sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) unique(x$cell_type))
bar_plot1<- sapply(immune_cell_infiltrate_annova_per_cell_type_significant_list, function(x) nrow(x))
bar_plot2<- sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) unique(x$cell_type))
barplot<-cbind(bar_plot2, bar_plot1)
barplot
barplot<-cbind(as.factor(bar_plot2), as.numeric(bar_plot1))
barplot
barplot<-cbind(factor(bar_plot2), as.numeric(bar_plot1))
barplot
barplot<-cbind(bar_plot2, as.numeric(bar_plot1))
barplot
barplot<-cbind(cell_type = bar_plot2, value = bar_plot1)
barplot
barplot<-data.frame(cbind(cell_type = bar_plot2, value = bar_plot1))
barplot
barplot<- barplot %>%
dplyr::filter(value > 0)
class(barplot$value)
barplot<-data.frame(cbind(cell_type = bar_plot2, value = as.numeric(bar_plot1)))
class(barplot$value)
barplot$value<- as.numeric(barplot$value)
class(barplot$value)
barplot<- barplot %>%
dplyr::filter(value > 0)
barplot
bar_plot1<- sapply(immune_cell_infiltrate_annova_per_cell_type_significant_list, function(x) nrow(x))
bar_plot2<- sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) unique(x$cell_type))
barplot<-data.frame(cbind(cell_type = bar_plot2, value = bar_plot1))
barplot$value<- as.numeric(barplot$value)
barplot
bar_plot2<- as.numeric(sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) unique(x$cell_type)))
barplot<-data.frame(cbind(cell_type = bar_plot2, value = bar_plot1))
barplot
class(barplot$value)
barplot<- barplot %>%
dplyr::filter(value > 0)
barplot
bar_plot1<- sapply(immune_cell_infiltrate_annova_per_cell_type_significant_list, function(x) nrow(x))
bar_plot2<- as.numeric(sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) unique(x$cell_type)))
barplot<-data.frame(cell_type = bar_plot2, value = bar_plot1)
bar_plot1<- sapply(immune_cell_infiltrate_annova_per_cell_type_significant_list, function(x) nrow(x))
bar_plot2<- sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) unique(x$cell_type))
barplot<-data.frame(cell_type = bar_plot2, value = bar_plot1)
barplot
class(barplot$value)
barplot<- barplot %>%
dplyr::filter(value > 0)
barplot
immune_cell_infiltrate_annova_per_cell_type_significant_list
sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) unique(x$cancer))
sapply(immune_cell_infiltrate_annova_per_cell_type_significant_list, function(x) unique(x$cancer))
bar_plot1<- sapply(immune_cell_infiltrate_annova_per_cell_type_significant_list, function(x) nrow(x))
bar_plot2<- sapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x) unique(x$cell_type))
barplot<-data.frame(cell_type = bar_plot2, value = bar_plot1)
barplot<- barplot %>%
dplyr::filter(value > 0)
barplot
p <-ggplot(bar_plot, aes(x = cell_type, y = value))
p <-ggplot(barplot, aes(x = cell_type, y = value))
p +geom_bar(stat = "identity") +
xlab("Immune Cell Type") + ylab("Number of Significant Co-deletions") +
ggtitle("Number of Significant Co-deletions per Immune Cell Type") +
theme_bw() +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5),
plot.title = element_text(hjust = 0.5)
) +
##Save plot
ggsave("bar_all_immune_codeletions.tiff")
colnames(immune_cell_infiltrate_annova_per_cell_type_list[[19]])
immune_cell_infiltrate_annova_per_cell_type_list[[19]] %>%
dplyr::filter(target_gene == "CDKN2A") %>%
dplyr::filter(p_value_cat2_1 <= 0.05) %>%
dplyr::filter(number_cat1 >= 20 & number_cat2 >= 20)
significant_gene_selection<- function(x, gene){
x %>%
dplyr::filter(target_gene == gene) %>%
dplyr::filter(p_value_cat2_1 <= 0.05) %>%
dplyr::filter(number_cat1 >= 20 & number_cat2 >= 20)
}
CDKN2A_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "CDKN2A"))
names(CDKN2A_significant_immune_infiltration)<- immune_cell_types
sapply(CDKN2A_significant_immune_infiltration, function(x) nrow(x))
CDKN2A_significant_immune_infiltration$`Activated Natural killer cell`
CDKN2A_significant_immune_infiltration$`CD8 T cell`
immune_cell_infiltrate_annova_per_cell_type_significant_table<- do.call(rbind, immune_cell_infiltrate_annova_per_cell_type_significant_list)
colnames(immune_cell_infiltrate_annova_per_cell_type_significant_table)
immune_cell_infiltrate_annova_per_cell_type_significant_table<- immune_cell_infiltrate_annova_per_cell_type_significant_table %>%
dplyr::arrange(cancer, target_gene, BH_adjust_cat2_1)
heaad(immune_cell_infiltrate_annova_per_cell_type_significant_table)
head(immune_cell_infiltrate_annova_per_cell_type_significant_table)
write.csv(immune_cell_infiltrate_annova_per_cell_type_significant_table, file = "immune_cell_infiltrate_annova_per_cell_type_significant_table_p0_1_greather_than_20.csv")
immune_cell_infiltrate_annova_per_cell_type_significant_table<- immune_cell_infiltrate_annova_per_cell_type_significant_table %>%
dplyr::arrange(cancer, target_gene, cell_type, BH_adjust_cat2_1)
head(immune_cell_infiltrate_annova_per_cell_type_significant_table)
write.csv(immune_cell_infiltrate_annova_per_cell_type_significant_table, file = "immune_cell_infiltrate_annova_per_cell_type_significant_table_p0_1_greather_than_20.csv")
immune_cell_infiltrate_annova_per_cell_type_significant_table<- immune_cell_infiltrate_annova_per_cell_type_significant_table %>%
dplyr::arrange(cell_type, cancer, target_gene, BH_adjust_cat2_1)
head(immune_cell_infiltrate_annova_per_cell_type_significant_table)
write.csv(immune_cell_infiltrate_annova_per_cell_type_significant_table, file = "immune_cell_infiltrate_annova_per_cell_type_significant_table_p0_1_greather_than_20_by_celltype.csv")
immune_cell_infiltrate_annova_per_cell_type_significant_table<- immune_cell_infiltrate_annova_per_cell_type_significant_table %>%
dplyr::arrange(cancer, target_gene, cell_type, BH_adjust_cat2_1)
colnames(immune_cell_infiltrate_annova_per_cell_type_list[[19]])
immune_cell_infiltrate_annova_per_cell_type_list[[19]] %>%
dplyr::filter(target_gene == "CDKN2A") %>%
dplyr::filter(p_value_cat2_1 <= 0.05) %>%
dplyr::filter(number_cat1 >= 20 & number_cat2 >= 20)
significant_gene_selection<- function(x, gene){
x %>%
dplyr::filter(target_gene == gene) %>%
dplyr::filter(p_value_cat2_1 <= 0.05) %>%
dplyr::filter(number_cat1 >= 20 & number_cat2 >= 20)
}
CDKN2A_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "CDKN2A"))
names(CDKN2A_significant_immune_infiltration)<- immune_cell_types
sapply(CDKN2A_significant_immune_infiltration, function(x) nrow(x))
CDKN2A_significant_immune_infiltration$`Activated Natural killer cell`
CDKN2A_significant_immune_infiltration$`CD8 T cell`
CDKN2A_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "CDKN2A"))
names(CDKN2A_significant_immune_infiltration)<- immune_cell_types
CDKN2A_significant_immune_infiltration_table<- do.call(rbind, CDKN2A_significant_immune_infiltration) %>%
dplyr::arrange(cell_type, cancer, target_gene, p_value_cat2_1)
head(CDKN2A_significant_immune_infiltration_table)
write.csv(CDKN2A_significant_immune_infiltration_table, file = "CDKN2A_significant_immune_infiltration_table.csv")
TP53_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "TP53"))
names(TP53_significant_immune_infiltration)<- immune_cell_types
TP53_significant_immune_infiltration_table<- do.call(rbind, TP53_significant_immune_infiltration) %>%
dplyr::arrange(cell_type, cancer, target_gene, p_value_cat2_1)
head(TP53_significant_immune_infiltration_table)
write.csv(TP53_significant_immune_infiltration_table, file = "TP53_significant_immune_infiltration_table.csv")
sapply(TP53_significant_immune_infiltration, function(x) nrow(x))
RB1_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "RB1"))
names(RB1_significant_immune_infiltration)<- immune_cell_types
RB1_significant_immune_infiltration_table<- do.call(rbind, RB1_significant_immune_infiltration) %>%
dplyr::arrange(cell_type, cancer, target_gene, p_value_cat2_1)
sapply(RB1_significant_immune_infiltration, function(x) nrow(x))
head(RB1_significant_immune_infiltration_table)
write.csv(RB1_significant_immune_infiltration_table, file = "RB1_significant_immune_infiltration_table.csv")
TGFBR2_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "TGFBR2"))
names(TGFBR2_significant_immune_infiltration)<- immune_cell_types
TGFBR2_significant_immune_infiltration_table<- do.call(rbind, TGFBR2_significant_immune_infiltration) %>%
dplyr::arrange(cell_type, cancer, target_gene, p_value_cat2_1)
sapply(TGFBR2_significant_immune_infiltration, function(x) nrow(x))
head(TGFBR2_significant_immune_infiltration_table)
write.csv(TGFBR2_significant_immune_infiltration_table, file = "TGFBR2_significant_immune_infiltration_table.csv")
CDKN1B_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "CDKN1B"))
names(CDKN1B_significant_immune_infiltration)<- immune_cell_types
TP53_significant_immune_infiltration_table<- do.call(rbind, CDKN1B_significant_immune_infiltration) %>%
dplyr::arrange(cell_type, cancer, target_gene, p_value_cat2_1)
sapply(CDKN1B_significant_immune_infiltration, function(x) nrow(x))
head(CDKN1B_significant_immune_infiltration_table)
CDKN1B_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "CDKN1B"))
names(CDKN1B_significant_immune_infiltration)<- immune_cell_types
CDKN1B_significant_immune_infiltration_table<- do.call(rbind, CDKN1B_significant_immune_infiltration) %>%
dplyr::arrange(cell_type, cancer, target_gene, p_value_cat2_1)
sapply(CDKN1B_significant_immune_infiltration, function(x) nrow(x))
head(CDKN1B_significant_immune_infiltration_table)
write.csv(CDKN1B_significant_immune_infiltration_table, file = "CDKN1B_significant_immune_infiltration_table.csv")
LRP1B_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "LRP1B"))
names(LRP1B_significant_immune_infiltration)<- immune_cell_types
LRP1B_significant_immune_infiltration_table<- do.call(rbind, LRP1B_significant_immune_infiltration) %>%
dplyr::arrange(cell_type, cancer, target_gene, p_value_cat2_1)
sapply(LRP1B_significant_immune_infiltration, function(x) nrow(x))
head(LRP1B_significant_immune_infiltration_table)
write.csv(LRP1B_significant_immune_infiltration_table, file = "LRP1B_significant_immune_infiltration_table.csv")
CDKN2A_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "CDKN2A"))
names(CDKN2A_significant_immune_infiltration)<- immune_cell_types
CDKN2A_significant_immune_infiltration_table<- do.call(rbind, CDKN2A_significant_immune_infiltration) %>%
dplyr::arrange(cell_type, cancer, target_gene, p_value_cat2_1)
head(CDKN2A_significant_immune_infiltration_table)
write.csv(CDKN2A_significant_immune_infiltration_table, file = "CDKN2A_significant_immune_infiltration_table.csv")
sapply(CDKN2A_significant_immune_infiltration, function(x) nrow(x))
CDKN2A_significant_immune_infiltration$`Activated Natural killer cell`
CDKN2A_significant_immune_infiltration$`CD8 T cell`
CDKN1B_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "CDKN1B"))
names(CDKN1B_significant_immune_infiltration)<- immune_cell_types
CDKN1B_significant_immune_infiltration_table<- do.call(rbind, CDKN1B_significant_immune_infiltration) %>%
dplyr::arrange(cell_type, cancer, target_gene, p_value_cat2_1)
sapply(CDKN1B_significant_immune_infiltration, function(x) nrow(x))
head(CDKN1B_significant_immune_infiltration_table)
write.csv(CDKN1B_significant_immune_infiltration_table, file = "CDKN1B_significant_immune_infiltration_table.csv")
LRP1B_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "LRP1B"))
names(LRP1B_significant_immune_infiltration)<- immune_cell_types
LRP1B_significant_immune_infiltration_table<- do.call(rbind, LRP1B_significant_immune_infiltration) %>%
dplyr::arrange(cell_type, cancer, target_gene, p_value_cat2_1)
sapply(LRP1B_significant_immune_infiltration, function(x) nrow(x))
head(LRP1B_significant_immune_infiltration_table)
write.csv(LRP1B_significant_immune_infiltration_table, file = "LRP1B_significant_immune_infiltration_table.csv")
RB1_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "RB1"))
names(RB1_significant_immune_infiltration)<- immune_cell_types
RB1_significant_immune_infiltration_table<- do.call(rbind, RB1_significant_immune_infiltration) %>%
dplyr::arrange(cell_type, cancer, target_gene, p_value_cat2_1)
sapply(RB1_significant_immune_infiltration, function(x) nrow(x))
head(RB1_significant_immune_infiltration_table)
write.csv(RB1_significant_immune_infiltration_table, file = "RB1_significant_immune_infiltration_table.csv")
TGFBR2_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "TGFBR2"))
names(TGFBR2_significant_immune_infiltration)<- immune_cell_types
TGFBR2_significant_immune_infiltration_table<- do.call(rbind, TGFBR2_significant_immune_infiltration) %>%
dplyr::arrange(cell_type, cancer, target_gene, p_value_cat2_1)
sapply(TGFBR2_significant_immune_infiltration, function(x) nrow(x))
head(TGFBR2_significant_immune_infiltration_table)
write.csv(TGFBR2_significant_immune_infiltration_table, file = "TGFBR2_significant_immune_infiltration_table.csv")
TP53_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "TP53"))
names(TP53_significant_immune_infiltration)<- immune_cell_types
TP53_significant_immune_infiltration_table<- do.call(rbind, TP53_significant_immune_infiltration) %>%
dplyr::arrange(cell_type, cancer, target_gene, p_value_cat2_1)
sapply(TP53_significant_immune_infiltration, function(x) nrow(x))
head(TP53_significant_immune_infiltration_table)
write.csv(TP53_significant_immune_infiltration_table, file = "TP53_significant_immune_infiltration_table.csv")
ZFHX3_significant_immune_infiltration<- lapply(immune_cell_infiltrate_annova_per_cell_type_list, function(x)significant_gene_selection(x, "ZFHX3"))
names(ZFHX3_significant_immune_infiltration)<- immune_cell_types
ZFHX3_significant_immune_infiltration_table<- do.call(rbind, ZFHX3_significant_immune_infiltration) %>%
dplyr::arrange(cell_type, cancer, target_gene, p_value_cat2_1)
sapply(ZFHX3_significant_immune_infiltration, function(x) nrow(x))
head(ZFHX3_significant_immune_infiltration_table)
write.csv(ZFHX3_significant_immune_infiltration_table, file = "ZFHX3_significant_immune_infiltration_table.csv")
RB1_significant_immune_infiltration_table$proximal_gene
getwd()
read.csv("../../Output/Survival analysis/tables/Maria's-Christophe gene list/170731_Overall_survival_cat1v2/survival_stats_ovsurv_cat1_2_significant_table_p0_1_more_than_20", stringsAsFactors = FALSE, header = TRUE)
read.csv("/Users/Matt/Documents/Masters_Bioinformatics/Internships/Output/Survival analysis/tables/Maria's-Christophe gene list/Analysis/170731_Overall_survival_cat1v2/survival_stats_ovsurv_cat1_2_significant_table_p0_1_more_than_20", stringsAsFactors = FALSE, header = TRUE)
read.csv("/Users/Matt/Documents/Masters_Bioinformatics/Internships/Output/Survival analysis/tables/Maria's-Christophe gene list/Analysis/170731_Overall_survival_cat1v2/survival_stats_ovsurv_cat1_2_significant_table_p0_1_more_than_20.csv", stringsAsFactors = FALSE, header = TRUE)
test<- read.csv("/Users/Matt/Documents/Masters_Bioinformatics/Internships/Output/Survival analysis/tables/Maria's-Christophe gene list/Analysis/170731_Overall_survival_cat1v2/survival_stats_ovsurv_cat1_2_significant_table_p0_1_more_than_20.csv", stringsAsFactors = FALSE, header = TRUE)
which( test$proximal_gene %in% RB1_significant_immune_infiltration_table)
test$proximal_gene
which( test$proximal_gene %in% RB1_significant_immune_infiltration_table$proximal_gene)
RB1_significant_immune_infiltration_table$proximal_gene
test$proximal_gene
p <- ggplot(mpg, aes(class, hwy))
p + geom_boxplot()
mpg
