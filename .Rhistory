dplyr::filter(start >= selection_criteria[1], end <= selection_criteria[2])
dim(matrix)
co.deletion_co.amplification_matrix<- function(cnv.table, column_start = 11, threshold = -1,
selection_criteria, Gene.Symbol = FALSE, start = FALSE,
Chromosome = 0, Cytoband = FALSE, remove_NA = TRUE, deletion = TRUE, normalisation = "total.tumour.number"){
if (remove_NA == TRUE){
cnv.table<- cnv.table %>%
dplyr::filter(!is.na(start))
}
if (Gene.Symbol == TRUE){
##Select Genes of interest by Gene Symbol and convert CNV data to matrix:
matrix<- cnv.table %>% dplyr::filter(Gene.Symbol %in% selection_criteria)
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else if (Chromosome[1] > 0 & start == FALSE){
##Select Chromosome of interest and convert CNV data to matrix:
matrix<- cnv.table %>% dplyr::filter(CHR %in% Chromosome)
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else if (start == TRUE & Chromosome[1] == 0){
##Select Chromosomal region of interest and convert CNV data to matrix:
matrix<- cnv.table$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
cnv.table[.,]
## Remove NAs which are maintained by dplyr::between function
matrix <- matrix %>% filter(!is.na(start))
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
}  else if (start == TRUE & Chromosome[1] > 0){
##Select Chromosome of interest and convert CNV data to matrix:
matrix<- cnv.table %>% dplyr::filter(CHR %in% Chromosome)
##Select Chromosomal region of interest and convert CNV data to matrix:
# matrix<- matrix$start %>%
# dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
# matrix[.,]
matrix<- matrix %>%
dplyr::filter(start >= selection_criteria[1], end <= selection_criteria[2])
##Convert Chromosome and region of interest into matrix:
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else if (Cytoband == TRUE){
##Select Cytobands of interest and convert CNV data to matrix:
matrix<- cnv.table %>% dplyr::filter(Cytoband %in% selection_criteria)
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else {
##Convert ALL CNV data to matrix:
cnv.matrix<- as.matrix(cnv.table[,column_start:ncol(cnv.table)])
rownames(cnv.matrix)<- cnv.table$Gene.Symbol
}
##Create a binary matrix of CNV data such that deletions (deletion = TRUE) or
#amplifications (deletion = FALSE) below (for deletions) or above (for amplifications) a threshold = 1
if (deletion == TRUE) {
cnv.matrix<- ifelse(cnv.matrix <= threshold, 1, 0)
} else {
cnv.matrix<- ifelse(cnv.matrix >= threshold, 1, 0)
}
## Calculate total number of co-deletions or amplifications
heatmap.matrix<- cnv.matrix%*%t(cnv.matrix)
if (normalisation == "total.tumour.number") {
heatmap.matrix<- heatmap.matrix/ncol(cnv.matrix)
} else if (normalisation == "tumours.with.event") {
tumours.with.del.or.amp<- colSums(cnv.matrix)
tumours.with.del.or.amp<-sum(tumours.with.del.or.amp >0)
heatmap.matrix<- heatmap.matrix/tumours.with.del.or.amp
} else if (normalisation == "none") {
} else if (normalisation == "frequency.for.whole.sample"){
heatmap.matrix<- sum(heatmap.matrix)/(ncol(cnv.matrix)*(nrow(cnv.matrix)^2))
}
## Remove NAs caused by divideing by 0.
heatmap.matrix[is.nan(heatmap.matrix)] = 0
return(heatmap.matrix)
}
co.deletion.per.target.gene<- lapply(gene_information_list, function(x) co.deletion_co.amplification_matrix(cnv.table, column_start = 11, threshold = -1, start = TRUE, Chromosome = x[[2]], selection_criteria = c(x[[4]] - distance, x[[4]] + distance), deletion = TRUE, normalisation = "total.tumour.number"))
co.deletion.per.target.gene[[5]]
dim(co.deletion.per.target.gene[[5]])
x<- gene_information_list[5]
x
Chromosome = x[[2]]
x<- gene_information_list[[5]]
x
Chromosome = x[[2]]
x[[2]]
co.deletion.per.target.gene<- lapply(gene_information_list, function(x) co.deletion_co.amplification_matrix(cnv.table, column_start = 11, threshold = -1, start = TRUE, Chromosome = x[[2]], selection_criteria = c(x[[4]] - distance, x[[5]] + distance), deletion = TRUE, normalisation = "total.tumour.number"))
co.deletion.per.target.gene[[5]]
dim(co.deletion.per.target.gene[[5]])
co.deletion.per.target.gene<- lapply(co.deletion.per.target.gene, function(x) as.data.frame(cbind(Gene.Symbol.row = rownames(x), x)))
co.deletion.per.target.gene[[2]]
dim(co.deletion.per.target.gene[[2]])
gathered<- lapply(co.deletion.per.target.gene, function(x) tidyr::gather(x, Gene.Symbol.col,proportion, 2:ncol(x)))
glimpse(gathered)
gathered[[1]]
gathered_target_genes<- vector("list", length(target_genes))
for(i in 1: length(target_genes)){
gene<- target_genes[[i]][1]
gathered_target_genes[[i]]<- gathered[[i]] %>%
dplyr::filter(Gene.Symbol.col == gene)
}
gathered_target_genes
gathered.co.deletion.per.target.gene<- do.call(rbind, gathered_target_genes)
dim(gathered.co.deletion.per.target.gene)
sum(sapply(co.deletion.per.target.gene, function(x) ncol(x)-1))
distance_from_target_gene_function<- function(x){
##Get start of target gene:
# cnv.table[1:2, 1:12]
#
# x<- gene_information_list[[1]]
#
# x[[4]]
##Get end site of genes 2.5MB away of 5' start site of target gene
end_sites_5prime_genes<- cnv.table %>%
dplyr::filter(CHR == x[[2]]) %>%
dplyr::filter(start <= x[[4]], start >=  x[[4]] - 2.5e+6) %>%
dplyr::select(end)
# end_sites_5prime_genes
##Calculate the distances between genes
distance_5prime_genes<- x[[4]] - end_sites_5prime_genes
# distance_5prime_genes
##Any value <0 = 0 i.e. the gene of interest and any overlapping genes
distance_5prime_genes[distance_5prime_genes < 0]<- 0
##Get the end of the gene
# x[[5]]
##Get start site of genes 2.5MB away of 3' end of end of target gene
start_sites_3prime_genes<-cnv.table %>%
dplyr::filter(CHR == x[[2]]) %>%
dplyr::filter(start > x[[4]], end <= x[[5]] + 2.5e+6 ) %>%
dplyr::select(start)
# start_sites_3prime_genes
##calculate the distance to the end of the genes 5' of the start of the target gene.
distance_3prime_genes<- start_sites_3prime_genes - x[[5]]
# distance_3prime_genes
##Any value <0 = 0 i.e. the gene of interest and any overlapping genes
distance_3prime_genes[distance_3prime_genes < 0]<- 0
###combine start and end distance lists and add 0 in place of MET
## Add zero:
# distance_5prime_genes<-rbind(distance_5prime_genes, 0)
# distance_5prime_genes
##Make sure both tables have same colnames
colnames(distance_5prime_genes)<- "start"
## Join data together
distance_from_target_gene<- rbind(distance_5prime_genes, distance_3prime_genes)
# distance_from_target_gene
}
distance_from_target_gene_table<- lapply(gene_information_list, function(x) distance_from_target_gene_function(x))
distance_from_target_gene_table[[2]]
identical(distance_from_target_gene, distance_from_target_gene_table[[2]])
cnv.table %>%
dplyr::filter(CHR == x[[2]]) %>%
dplyr::filter(end <= x[[4]]) %>%
dplyr::filter(end >= x[[4]] - 2.5e+6) %>%
dplyr::select(Gene.Symbol, start, end)
x[[4]]
distance_from_target_gene
cnv.table %>%
dplyr::filter(CHR == x[[2]]) %>%
dplyr::filter(start >= x[[5]]) %>%
dplyr::filter(start <= x[[5]] + 2.5e+6) %>%
dplyr::select(Gene.Symbol, start, end)
x[[5]]
dim(distance_from_target_gene_table)
distance_from_target_gene_table<- do.call(rbind, distance_from_target_gene_table)
dim(distance_from_target_gene_table)
dim(gathered.co.deletion.per.target.gene)
sapply(co.deletion.per.target.gene, function(x) nrow(x))
sapply(distance_from_target_gene_table, function(x) nrow(x))
distance_from_target_gene_table<- lapply(gene_information_list, function(x) distance_from_target_gene_function(x))
sapply(co.deletion.per.target.gene, function(x) nrow(x))
sapply(distance_from_target_gene_table, function(x) nrow(x))
dim(distance_from_target_gene_table)
distance_from_target_gene_table<- do.call(rbind, distance_from_target_gene_table)
dim(distance_from_target_gene_table)
dim(gathered.co.deletion.per.target.gene)
sapply(co.deletion.per.target.gene, function(x) nrow(x))
co_deletions_distance_from_target_gene_plot_table<- cbind(proportion_of_co_deletion = co.deletion.per.target.gene, distance_from_target_gene = distance_from_target_gene_table)
distance_from_target_gene_table<- lapply(gene_information_list, function(x) distance_from_target_gene_function(x))
distance_from_target_gene_table[[2]]
identical(distance_from_target_gene, distance_from_target_gene_table[[2]])
dim(distance_from_target_gene_table)
distance_from_target_gene_table<- do.call(rbind, distance_from_target_gene_table)
dim(distance_from_target_gene_table)
dim(gathered.co.deletion.per.target.gene)
sapply(co.deletion.per.target.gene, function(x) nrow(x))
sapply(distance_from_target_gene_table, function(x) nrow(x))
co_deletions_distance_from_target_gene_plot_table<- cbind(proportion_of_co_deletion = co.deletion.per.target.gene, distance_from_target_gene = distance_from_target_gene_table)
co_deletions_distance_from_target_gene_plot_table<- cbind(proportion_of_co_deletion = gathered.co.deletion.per.target.gene, distance_from_target_gene = distance_from_target_gene_table)
head(co_deletions_distance_from_target_gene_plot_table)
tail(co_deletions_distance_from_target_gene_plot_table)
saveRDS(co_deletions_distance_from_target_gene_plot_table, "/Users/Matt/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/R workspaces/BRCA_co_deletion_distance_from_target_gene_plot_table.rds")
saveRDS(co_deletions_distance_from_target_gene_plot_table, "/Users/Matt/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/R workspaces/BRCA_co_deletion_distance_from_target_gene_plot_table.rds")
colnames(co_deletions_distance_from_target_gene_plot_table)<- c("Comparison_gene", "Target_gene", "proportion_co_del_amp". "distance_from_target_genes")
colnames(co_deletions_distance_from_target_gene_plot_table)<- c("Comparison_gene", "Target_gene", "proportion_co_del_amp", "distance_from_target_genes")
saveRDS(co_deletions_distance_from_target_gene_plot_table, "/Users/Matt/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/R workspaces/BRCA_co_deletion_distance_from_target_gene_plot_table.rds")
head(co_deletions_distance_from_target_gene_plot_table)
dim(co_deletions_distance_from_target_gene_plot_table)
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = proportion_co_del_amp)) +
geom_point(size = 1, shape = 1) +
geom_smooth() +
xlab("Distance from target gene") +
ylab("Proportion of tumours with co-deletion")
ggsave("BRCA_co-deletion_distance_from_target_gene_BW.tiff")
head(co_deletions_distance_from_target_gene_plot_table)
ggplot(co_deletions_removed_zeros_plot_table2, aes(x = distance_from_target_genes,
y = proportion_co_del_amp,
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
geom_smooth() +
xlab("Inter gene distance") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = proportion_co_del_amp,
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
geom_smooth() +
xlab("Inter gene distance") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene")
ggsave("BRCA_co-deletion_distance_from_target_gene_colour.tiff")
head(co_deletions_distance_from_target_gene_plot_table)
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = proportion_co_del_amp,
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
geom_smooth() +
xlab("Inter gene distance") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete( guide = FALSE)+
labs(colour ="Chromosome") +
facet_wrap(~inter_gene_distance.chromosome) +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = proportion_co_del_amp,
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
geom_smooth() +
xlab("Inter gene distance") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete( guide = FALSE)+
labs(colour ="Chromosome") +
facet_wrap(~Target_gene) +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = proportion_co_del_amp)) +
geom_point(size = 1, shape = 1) +
xlab("Distance from target gene") +
ylab("Proportion of tumours with co-deletion") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_distance_from_target_gene_BW.tiff")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = proportion_co_del_amp,
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
xlab("Distance from target gene") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_distance_from_target_gene_colour.tiff")
head(co_deletions_distance_from_target_gene_plot_table)
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = proportion_co_del_amp,
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
xlab("Inter gene distance") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete( guide = FALSE)+
labs(colour ="Chromosome") +
facet_wrap(~Target_gene) +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_distance_from_target_gene_colour_wrap.tiff")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = proportion_co_del_amp)) +
geom_point(size = 1, shape = 1) +
xlab("Distance from target gene") +
ylab("Proportion of tumours with co-deletion") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_BW.tiff")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = proportion_co_del_amp,
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
xlab("Distance from target gene") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_colour.tiff")
head(co_deletions_distance_from_target_gene_plot_table)
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = proportion_co_del_amp,
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
xlab("Inter gene distance") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete( guide = FALSE)+
labs(colour ="Chromosome") +
facet_wrap(~Target_gene) +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_colour_wrap.tiff")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = proportion_co_del_amp,
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.5e+6, 2.5e+6),
labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = proportion_co_del_amp,
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = proportion_co_del_amp,
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
scale_y_continuous(breaks = c(0, 0.01, 0.2, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
scale_y_continuous(breaks = c(0, 0.01, 0.2, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
scale_y_continuous(breaks = c(0, 0.01, 0.2, 0.03), labels = c(0, 0.01, 0.2, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
scale_y_continuous(breaks = c(0, 0.01, 0.02, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp))) +
geom_point(size = 1, shape = 1) +
scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene") +
ylab("Proportion of tumours with co-deletion") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_BW.tiff")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_colour.tiff")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp))) +
geom_point(size = 1, shape = 1) +
scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_BW.tiff")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_colour.tiff")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp))) +
geom_point(size = 1, shape = 1) +
scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_BW.tiff")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_colour.tiff")
head(co_deletions_distance_from_target_gene_plot_table)
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete(guide = FALSE)+
labs(colour ="Gene") +
facet_wrap(~Target_gene) +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_colour_wrap.tiff")
x<-"/Users/Matt/Documents/Masters_Bioinformatics/Internships/Input data/unzipped original broad TCGA CNV data"
file.to.import<-"all_thresholded.by_genes.txt"
path<-"/Users/Matt/Documents/Masters_Bioinformatics/Internships/Input data/unzipped original broad TCGA CNV data"
file.to.import<-"all_thresholded.by_genes.txt"
threshold_cnv_list<- import.files.from.directories(path, file.to.import)
length(threshold_cnv_list)
length(threshold_cnv_list)
dim(threshold_cnv_list[[1]])
acc.cnv.list.loc<- chromosomal_location(threshold_cnv_list[[1]])
threshold_cnv_list_loc<- lapply(threshold_cnv_list, function(x) chromosomal_location(x))
identical(acc.cnv.list.loc, threshold_cnv_list_loc[[1]])
threshold_cnv_list_loc[[1]][1:2, 1:12]
theshold_CNV_all_table<-join.cnv.datasets(threshold_cnv_list, column = 4)
dim(theshold_CNV_all_table)
which(is.na(theshold_CNV_all_table), arr.ind = T)
theshold_CNV_all_table[1:2, 1:4]
saveRDS(threshold_cnv_list, "/Users/Matt/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/R workspaces/threshold_cnv_list.rds")
theshold_CNV_all_table_loc<- chromosomal_location(theshold_CNV_all_table)
threshold_CNV_all_table<-join.cnv.datasets(threshold_cnv_list, column = 4)
saveRDS(threshold_CNV_all_table, "/Users/Matt/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/R workspaces/threshold_CNV_all_table.rds")
threshold_CNV_all_table_loc<- chromosomal_location(threshold_CNV_all_table)
saveRDS(threshold_CNV_all_table_loc, "/Users/Matt/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/R workspaces/threshold_CNV_all_table_loc.rds")
threshold_cnv_list_loc<- lapply(threshold_cnv_list, function(x) chromosomal_location(x))
identical(acc.cnv.list.loc, threshold_cnv_list_loc[[1]])
threshold_cnv_list_loc[[1]][1:2, 1:12]
saveRDS(threshold_cnv_list_loc, "/Users/Matt/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/R workspaces/threshold_cnv_list_loc.rds")
threshold_cnv_list_short<- threshold_cnv_list[c(3, 7, 9, 12, 20, 21, 23, 24, 26, 29, 30)]
length(threshold_cnv_list_short)
names(threshold_cnv_list_short)
threshold_cnv_list_loc_short<- threshold_cnv_list_loc[c(3, 7, 9, 12, 20, 21, 23, 24, 26, 29, 30)]
length(threshold_cnv_list_loc_short)
names(threshold_cnv_list_loc_short)
threshold_short_cnv_list_loc<- threshold_cnv_list_loc[c(3, 7, 9, 12, 20, 21, 23, 24, 26, 29, 30)]
length(threshold_short_cnv_list_loc)
names(threshold_short_cnv_list_loc)
saveRDS(threshold_short_cnv_list, "/Users/Matt/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/R workspaces/threshold_short_cnv_list.rds")
threshold_short_cnv_list<- threshold_cnv_list[c(3, 7, 9, 12, 20, 21, 23, 24, 26, 29, 30)]
length(threshold_short_cnv_list)
names(threshold_short_cnv_list)
saveRDS(threshold_short_cnv_list, "/Users/Matt/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/R workspaces/threshold_short_cnv_list.rds")
threshold_short_cnv_list_loc<- threshold_cnv_list_loc[c(3, 7, 9, 12, 20, 21, 23, 24, 26, 29, 30)]
length(threshold_short_cnv_list_loc)
names(threshold_short_cnv_list_loc)
saveRDS(threshold_short_cnv_list_loc, "/Users/Matt/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/R workspaces/threshold_short_cnv_list_loc.rds")
