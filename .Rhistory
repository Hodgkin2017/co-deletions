ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
#scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
#labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
#scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete(guide = FALSE)+
labs(colour ="Gene") +
facet_wrap(~Target_gene) +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
distance<- 2.5e+05
distance<- 2.5e+06
co.deletion.per.target.gene<- lapply(gene_information_list, function(x) co.deletion_co.amplification_matrix(cnv.table, column_start = 11, threshold = -1, start = TRUE, Chromosome = x[[2]], selection_criteria = c(x[[4]] - distance, x[[5]] + distance), deletion = TRUE, normalisation = "total.tumour.number"))
length(co.deletion.per.target.gene)
co.deletion.per.target.gene[[2]]
dim(co.deletion.per.target.gene[[2]])
co.deletion.per.target.gene<- lapply(co.deletion.per.target.gene, function(x) as.data.frame(cbind(Gene.Symbol.row = rownames(x), x)))
co.deletion.per.target.gene[[2]]
dim(co.deletion.per.target.gene[[2]])
gathered<- lapply(co.deletion.per.target.gene, function(x) tidyr::gather(x, Gene.Symbol.col,proportion, 2:ncol(x)))
gathered[[2]]
dim(gathered[[2]])
gathered[[1]]
gathered_target_genes<- vector("list", length(target_genes))
for(i in 1: length(target_genes)){
gene<- target_genes[[i]][1]
gathered_target_genes[[i]]<- gathered[[i]] %>%
dplyr::filter(Gene.Symbol.col == gene)
}
gathered_target_genes
gathered.co.deletion.per.target.gene<- do.call(rbind, gathered_target_genes)
dim(gathered.co.deletion.per.target.gene)
gathered.co.deletion.per.target.gene
sum(sapply(co.deletion.per.target.gene, function(x) ncol(x)-1))
target_genes<- c("MET", "CDKN2A", "RB1", "WWOX",
"LRP1B", "PDE4D", "CCNE1", "TP53",
"FGFR1", "MYC", "EGFR","WHSC1L1",
"ERBB2", "MCL1", "MDM2", "CCND1", "ATM",
"NOTCH1", "PPP2R2A", "BRD4", "ARID1A",
"STK11", "PARK2")
gene_information_list
gene_information_list[[4]][[4]]
distance_from_target_gene_function<- function(cnv.table, x, distance){
##Get start of target gene:
# cnv.table[1:2, 1:12]
#
# x<- gene_information_list[[1]]
#
# x[[4]]
##Get end site of genes 2.5MB away of 5' start site of target gene
end_sites_5prime_genes<- cnv.table %>%
dplyr::filter(CHR == x[[2]]) %>%
dplyr::filter(start <= x[[4]], start >=  x[[4]] - distance) %>%
dplyr::select(end)
# end_sites_5prime_genes
##Calculate the distances between genes
distance_5prime_genes<- x[[4]] - end_sites_5prime_genes
# distance_5prime_genes
##Any value <0 = 0 i.e. the gene of interest and any overlapping genes
distance_5prime_genes[distance_5prime_genes < 0]<- 0
##Get the end of the gene
# x[[5]]
##Get start site of genes 2.5MB away of 3' end of end of target gene
start_sites_3prime_genes<-cnv.table %>%
dplyr::filter(CHR == x[[2]]) %>%
dplyr::filter(start > x[[4]], end <= x[[5]] + distance ) %>%
dplyr::select(start)
# start_sites_3prime_genes
##calculate the distance to the end of the genes 5' of the start of the target gene.
distance_3prime_genes<- start_sites_3prime_genes - x[[5]]
# distance_3prime_genes
##Any value <0 = 0 i.e. the gene of interest and any overlapping genes
if (nrow(distance_3prime_genes) == 0){
}else {
distance_3prime_genes[distance_3prime_genes < 0]<- 0
}
###combine start and end distance lists and add 0 in place of MET
## Add zero:
# distance_5prime_genes<-rbind(distance_5prime_genes, 0)
# distance_5prime_genes
##Make sure both tables have same colnames
colnames(distance_5prime_genes)<- "start"
## Join data together
distance_from_target_gene<- rbind(distance_5prime_genes, distance_3prime_genes)
# distance_from_target_gene
return(distance_from_target_gene)
}
distance_from_target_gene_table<- lapply(gene_information_list, function(x) distance_from_target_gene_function(cnv.table = cnv.table, x = x, distance = distance))
distance_from_target_gene_table[[2]]
distance_from_target_gene_table
dim(distance_from_target_gene_table)
distance_from_target_gene_table<- do.call(rbind, distance_from_target_gene_table)
dim(distance_from_target_gene_table)
dim(gathered.co.deletion.per.target.gene)
sapply(co.deletion.per.target.gene, function(x) nrow(x))
co_deletions_distance_from_target_gene_plot_table<- cbind(proportion_of_co_deletion = gathered.co.deletion.per.target.gene, distance_from_target_gene = distance_from_target_gene_table)
head(co_deletions_distance_from_target_gene_plot_table)
tail(co_deletions_distance_from_target_gene_plot_table)
dim(co_deletions_distance_from_target_gene_plot_table)
colnames(co_deletions_distance_from_target_gene_plot_table)<- c("Comparison_gene", "Target_gene", "proportion_co_del_amp", "distance_from_target_genes")
saveRDS(co_deletions_distance_from_target_gene_plot_table, "/Users/Matt/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/R workspaces/BRCA_co_deletion_distance_from_target_gene_plot_table.rds")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp))) +
geom_point(size = 1, shape = 1) +
#scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
# labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
#scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_BW.tiff")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
#scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
#labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
#scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_colour.tiff")
head(co_deletions_distance_from_target_gene_plot_table)
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
#scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
#labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
#scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete(guide = FALSE)+
labs(colour ="Gene") +
facet_wrap(~Target_gene) +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_colour_wrap.tiff")
getwd()
distance<- 2.5e+06
co.deletion.per.target.gene<- lapply(gene_information_list, function(x) co.deletion_co.amplification_matrix(cnv.table, column_start = 11, threshold = -2, start = TRUE, Chromosome = x[[2]], selection_criteria = c(x[[4]] - distance, x[[5]] + distance), deletion = TRUE, normalisation = "total.tumour.number"))
length(co.deletion.per.target.gene)
co.deletion.per.target.gene[[2]]
dim(co.deletion.per.target.gene[[2]])
co.deletion.per.target.gene<- lapply(co.deletion.per.target.gene, function(x) as.data.frame(cbind(Gene.Symbol.row = rownames(x), x)))
co.deletion.per.target.gene[[2]]
dim(co.deletion.per.target.gene[[2]])
gathered<- lapply(co.deletion.per.target.gene, function(x) tidyr::gather(x, Gene.Symbol.col,proportion, 2:ncol(x)))
gathered[[2]]
dim(gathered[[2]])
gathered[[1]]
gathered_target_genes<- vector("list", length(target_genes))
for(i in 1: length(target_genes)){
gene<- target_genes[[i]][1]
gathered_target_genes[[i]]<- gathered[[i]] %>%
dplyr::filter(Gene.Symbol.col == gene)
}
gathered_target_genes
gathered.co.deletion.per.target.gene<- do.call(rbind, gathered_target_genes)
dim(gathered.co.deletion.per.target.gene)
gathered.co.deletion.per.target.gene
sum(sapply(co.deletion.per.target.gene, function(x) ncol(x)-1))
target_genes<- c("MET", "CDKN2A", "RB1", "WWOX",
"LRP1B", "PDE4D", "CCNE1", "TP53",
"FGFR1", "MYC", "EGFR","WHSC1L1",
"ERBB2", "MCL1", "MDM2", "CCND1", "ATM",
"NOTCH1", "PPP2R2A", "BRD4", "ARID1A",
"STK11", "PARK2")
gene_information_list
gene_information_list[[4]][[4]]
distance_from_target_gene_function<- function(cnv.table, x, distance){
##Get start of target gene:
# cnv.table[1:2, 1:12]
#
# x<- gene_information_list[[1]]
#
# x[[4]]
##Get end site of genes 2.5MB away of 5' start site of target gene
end_sites_5prime_genes<- cnv.table %>%
dplyr::filter(CHR == x[[2]]) %>%
dplyr::filter(start <= x[[4]], start >=  x[[4]] - distance) %>%
dplyr::select(end)
# end_sites_5prime_genes
##Calculate the distances between genes
distance_5prime_genes<- x[[4]] - end_sites_5prime_genes
# distance_5prime_genes
##Any value <0 = 0 i.e. the gene of interest and any overlapping genes
distance_5prime_genes[distance_5prime_genes < 0]<- 0
##Get the end of the gene
# x[[5]]
##Get start site of genes 2.5MB away of 3' end of end of target gene
start_sites_3prime_genes<-cnv.table %>%
dplyr::filter(CHR == x[[2]]) %>%
dplyr::filter(start > x[[4]], end <= x[[5]] + distance ) %>%
dplyr::select(start)
# start_sites_3prime_genes
##calculate the distance to the end of the genes 5' of the start of the target gene.
distance_3prime_genes<- start_sites_3prime_genes - x[[5]]
# distance_3prime_genes
##Any value <0 = 0 i.e. the gene of interest and any overlapping genes
if (nrow(distance_3prime_genes) == 0){
}else {
distance_3prime_genes[distance_3prime_genes < 0]<- 0
}
###combine start and end distance lists and add 0 in place of MET
## Add zero:
# distance_5prime_genes<-rbind(distance_5prime_genes, 0)
# distance_5prime_genes
##Make sure both tables have same colnames
colnames(distance_5prime_genes)<- "start"
## Join data together
distance_from_target_gene<- rbind(distance_5prime_genes, distance_3prime_genes)
# distance_from_target_gene
return(distance_from_target_gene)
}
distance_from_target_gene_table<- lapply(gene_information_list, function(x) distance_from_target_gene_function(cnv.table = cnv.table, x = x, distance = distance))
distance_from_target_gene_table[[2]]
distance_from_target_gene_table
dim(distance_from_target_gene_table)
distance_from_target_gene_table<- do.call(rbind, distance_from_target_gene_table)
dim(distance_from_target_gene_table)
dim(gathered.co.deletion.per.target.gene)
sapply(co.deletion.per.target.gene, function(x) nrow(x))
co_deletions_distance_from_target_gene_plot_table<- cbind(proportion_of_co_deletion = gathered.co.deletion.per.target.gene, distance_from_target_gene = distance_from_target_gene_table)
head(co_deletions_distance_from_target_gene_plot_table)
tail(co_deletions_distance_from_target_gene_plot_table)
dim(co_deletions_distance_from_target_gene_plot_table)
colnames(co_deletions_distance_from_target_gene_plot_table)<- c("Comparison_gene", "Target_gene", "proportion_co_del_amp", "distance_from_target_genes")
saveRDS(co_deletions_distance_from_target_gene_plot_table, "/Users/Matt/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/R workspaces/BRCA_co_deletion_distance_from_target_gene_plot_table.rds")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp))) +
geom_point(size = 1, shape = 1) +
#scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
# labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
#scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_BW.tiff")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
#scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
#labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
#scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_colour.tiff")
head(co_deletions_distance_from_target_gene_plot_table)
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
#scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
#labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
#scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete(guide = FALSE)+
labs(colour ="Gene") +
facet_wrap(~Target_gene) +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_2.5MB_distance_from_target_gene_colour_wrap.tiff")
distance<- 5.0e+06
co.deletion.per.target.gene<- lapply(gene_information_list, function(x) co.deletion_co.amplification_matrix(cnv.table, column_start = 11, threshold = -2, start = TRUE, Chromosome = x[[2]], selection_criteria = c(x[[4]] - distance, x[[5]] + distance), deletion = TRUE, normalisation = "total.tumour.number"))
length(co.deletion.per.target.gene)
co.deletion.per.target.gene[[2]]
dim(co.deletion.per.target.gene[[2]])
co.deletion.per.target.gene<- lapply(co.deletion.per.target.gene, function(x) as.data.frame(cbind(Gene.Symbol.row = rownames(x), x)))
co.deletion.per.target.gene[[2]]
dim(co.deletion.per.target.gene[[2]])
gathered<- lapply(co.deletion.per.target.gene, function(x) tidyr::gather(x, Gene.Symbol.col,proportion, 2:ncol(x)))
gathered[[2]]
dim(gathered[[2]])
gathered[[1]]
gathered_target_genes<- vector("list", length(target_genes))
for(i in 1: length(target_genes)){
gene<- target_genes[[i]][1]
gathered_target_genes[[i]]<- gathered[[i]] %>%
dplyr::filter(Gene.Symbol.col == gene)
}
gathered_target_genes
gathered.co.deletion.per.target.gene<- do.call(rbind, gathered_target_genes)
dim(gathered.co.deletion.per.target.gene)
gathered.co.deletion.per.target.gene
sum(sapply(co.deletion.per.target.gene, function(x) ncol(x)-1))
target_genes<- c("MET", "CDKN2A", "RB1", "WWOX",
"LRP1B", "PDE4D", "CCNE1", "TP53",
"FGFR1", "MYC", "EGFR","WHSC1L1",
"ERBB2", "MCL1", "MDM2", "CCND1", "ATM",
"NOTCH1", "PPP2R2A", "BRD4", "ARID1A",
"STK11", "PARK2")
gene_information_list
gene_information_list[[4]][[4]]
distance_from_target_gene_function<- function(cnv.table, x, distance){
##Get start of target gene:
# cnv.table[1:2, 1:12]
#
# x<- gene_information_list[[1]]
#
# x[[4]]
##Get end site of genes 2.5MB away of 5' start site of target gene
end_sites_5prime_genes<- cnv.table %>%
dplyr::filter(CHR == x[[2]]) %>%
dplyr::filter(start <= x[[4]], start >=  x[[4]] - distance) %>%
dplyr::select(end)
# end_sites_5prime_genes
##Calculate the distances between genes
distance_5prime_genes<- x[[4]] - end_sites_5prime_genes
# distance_5prime_genes
##Any value <0 = 0 i.e. the gene of interest and any overlapping genes
distance_5prime_genes[distance_5prime_genes < 0]<- 0
##Get the end of the gene
# x[[5]]
##Get start site of genes 2.5MB away of 3' end of end of target gene
start_sites_3prime_genes<-cnv.table %>%
dplyr::filter(CHR == x[[2]]) %>%
dplyr::filter(start > x[[4]], end <= x[[5]] + distance ) %>%
dplyr::select(start)
# start_sites_3prime_genes
##calculate the distance to the end of the genes 5' of the start of the target gene.
distance_3prime_genes<- start_sites_3prime_genes - x[[5]]
# distance_3prime_genes
##Any value <0 = 0 i.e. the gene of interest and any overlapping genes
if (nrow(distance_3prime_genes) == 0){
}else {
distance_3prime_genes[distance_3prime_genes < 0]<- 0
}
###combine start and end distance lists and add 0 in place of MET
## Add zero:
# distance_5prime_genes<-rbind(distance_5prime_genes, 0)
# distance_5prime_genes
##Make sure both tables have same colnames
colnames(distance_5prime_genes)<- "start"
## Join data together
distance_from_target_gene<- rbind(distance_5prime_genes, distance_3prime_genes)
# distance_from_target_gene
return(distance_from_target_gene)
}
distance_from_target_gene_table<- lapply(gene_information_list, function(x) distance_from_target_gene_function(cnv.table = cnv.table, x = x, distance = distance))
distance_from_target_gene_table[[2]]
distance_from_target_gene_table
dim(distance_from_target_gene_table)
distance_from_target_gene_table<- do.call(rbind, distance_from_target_gene_table)
dim(distance_from_target_gene_table)
dim(gathered.co.deletion.per.target.gene)
sapply(co.deletion.per.target.gene, function(x) nrow(x))
co_deletions_distance_from_target_gene_plot_table<- cbind(proportion_of_co_deletion = gathered.co.deletion.per.target.gene, distance_from_target_gene = distance_from_target_gene_table)
head(co_deletions_distance_from_target_gene_plot_table)
tail(co_deletions_distance_from_target_gene_plot_table)
dim(co_deletions_distance_from_target_gene_plot_table)
colnames(co_deletions_distance_from_target_gene_plot_table)<- c("Comparison_gene", "Target_gene", "proportion_co_del_amp", "distance_from_target_genes")
saveRDS(co_deletions_distance_from_target_gene_plot_table, "/Users/Matt/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/R workspaces/BRCA_co_deletion_distance_from_target_gene_plot_table.rds")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp))) +
geom_point(size = 1, shape = 1) +
#scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
# labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
#scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_5.0MB_distance_from_target_gene_BW.tiff")
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
#scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
#labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
#scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Gene") +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_5.0MB_distance_from_target_gene_colour.tiff")
head(co_deletions_distance_from_target_gene_plot_table)
ggplot(co_deletions_distance_from_target_gene_plot_table, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
#scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
#labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
#scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete(guide = FALSE)+
labs(colour ="Gene") +
facet_wrap(~Target_gene) +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_5.0MB_distance_from_target_gene_colour_wrap.tiff")
co_deletions_distance_from_target_gene_plot_table
co_deletions_distance_from_target_gene_plot_table_log<- co_deletions_distance_from_target_gene_plot_table
co_deletions_distance_from_target_gene_plot_table_log$distance_from_target_genes<- log(co_deletions_distance_from_target_gene_plot_table_log$distance_from_target_genes) + 1
co_deletions_distance_from_target_gene_plot_table_log
co_deletions_distance_from_target_gene_plot_table_log<- co_deletions_distance_from_target_gene_plot_table
co_deletions_distance_from_target_gene_plot_table_log$distance_from_target_genes<- log(co_deletions_distance_from_target_gene_plot_table_log$distance_from_target_genes + 1)
co_deletions_distance_from_target_gene_plot_table_log
co_deletions_distance_from_target_gene_plot_table_log<- co_deletions_distance_from_target_gene_plot_table
co_deletions_distance_from_target_gene_plot_table_log$distance_from_target_genes<- log10(co_deletions_distance_from_target_gene_plot_table_log$distance_from_target_genes + 1)
co_deletions_distance_from_target_gene_plot_table_log
co_deletions_distance_from_target_gene_plot_table_log<- co_deletions_distance_from_target_gene_plot_table
co_deletions_distance_from_target_gene_plot_table_log$distance_from_target_genes<- log10(co_deletions_distance_from_target_gene_plot_table_log$distance_from_target_genes + 1)
co_deletions_distance_from_target_gene_plot_table_log
test<- c(1, 10, 100, 200, 3000)
log(test)
test<- c(0, 1, 10, 100, 200, 3000)
test
log(test)
log10(test)
log10(test+1)
test+1
test
log10(test)
?log10
log(test)
log(1)
log10(10)
log10(100)
test<-c(test, 10000)
test
log(test)
log(test+1)
log10(test+1)
co_deletions_distance_from_target_gene_plot_table_log<- co_deletions_distance_from_target_gene_plot_table
co_deletions_distance_from_target_gene_plot_table_log$distance_from_target_genes<- log10(co_deletions_distance_from_target_gene_plot_table_log$distance_from_target_genes + 1)
co_deletions_distance_from_target_gene_plot_table_log
ggplot(co_deletions_distance_from_target_gene_plot_table_log, aes(x = distance_from_target_genes,
y = as.numeric(proportion_co_del_amp),
colour = Target_gene)) +
geom_point(size = 1, shape = 1) +
#scale_x_continuous(breaks = c(0, 0.5e+6, 1.0e+6, 1.5e+6, 2.0e+6, 2.5e+6),
#labels = c(0, 0.5, 1.0, 1.5, 2.0, 2.5)) +
#scale_y_continuous(breaks = c(0, 0.005, 0.01, 0.015, 0.02,0.025, 0.03)) +
xlab("Distance from target gene (MB)") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete(guide = FALSE)+
labs(colour ="Gene") +
facet_wrap(~Target_gene) +
theme(axis.text.x=element_text(angle=90,hjust=1, vjust = 0.5))
ggsave("BRCA_co-deletion_5.0MB_distance_from_target_gene_colour_log_wrap.tiff")
BRCA_clinical<- read.table("/Users/Matt/Documents/Masters_Bioinformatics/Internships/Input data/clinical/BRCA_clinical.tsv", header = TRUE, stringsAsFactors = FALSE, sep = "/t")
BRCA_clinical<- read.delim("/Users/Matt/Documents/Masters_Bioinformatics/Internships/Input data/clinical/BRCA_clinical.tsv", header = TRUE, stringsAsFactors = FALSE)
BRCA_clinical
BRCA_clinical[1:5, 1:10]
colnames(threshold_short_cnv_list)
threshold_short_cnv_list
colnames(threshold_short_cnv_list[[1]])
threshold_short_cnv_list$BRCA %>%
dplyr::select(-Gene.Symbol, -Locus.ID, -Cytoband) %>%
ncol()
threshold_short_cnv_list$BRCA %>%
dplyr::select(-Gene.Symbol, -Locus.ID, -Cytoband) %>%
colnames()
BRCA_cnv_names<- threshold_short_cnv_list$BRCA %>%
dplyr::select(-Gene.Symbol, -Locus.ID, -Cytoband) %>%
colnames()
length(BRCA_clinical$tcga_participant_barcode)
length(BRCA_cnv_names)
a<- c(1,2,3,4)
b<- c(2,3,5,6)
which(a %in% b)
which(BRCA_cnv_names %in% BRCA_clinical$tcga_participant_barcode)
BRCA_cnv_names
BRCA_clinical$tcga_participant_barcode
which(BRCA_cnv_names %in% BRCA_clinical$tcga_participant_barcode)
BRCA_cnv_names
class(BRCA_cnv_names)
class(BRCA_clinical$tcga_participant_barcode)
which(BRCA_cnv_names %in% BRCA_cnv_names)
patients<- BRCA_clinical$tcga_participant_barcode
which(BRCA_cnv_names %in% patients)
BRCA_cnv_names[1:5]
substr(BRCA_cnv_names[1:5], 0, 12)
BRCA_cnv_names
BRCA_clinical$tcga_participant_barcode
BRCA_cnv_names, 0, 12
substr(BRCA_cnv_names, 0, 12)
substr(BRCA_cnv_names, 0, 12) %>%gsub(".", "-")
substr(BRCA_cnv_names, 0, 12) %>%sub(".", "-")
BRCA_cnv_names<- substr(BRCA_cnv_names, 0, 12)
BRCA_cnv_names
?gsub
gsub(".", "-", BRCA_cnv_names)
gsub("//.", "-", BRCA_cnv_names)
gsub("/.", "-", BRCA_cnv_names)
gsub("\\.", "-", BRCA_cnv_names)
BRCA_cnv_names<- gsub("\\.", "-", BRCA_cnv_names)
which(BRCA_cnv_names %in% BRCA_cnv_names)
which(BRCA_cnv_names %in% patients)
length(which(BRCA_cnv_names %in% patients))
which(!(BRCA_cnv_names %in% patients))
length(BRCA_cnv_names)
length(BRCA_clinical$tcga_participant_barcode)
which(BRCA_cnv_names %in% patients)
length(which(BRCA_cnv_names %in% patients))
which(!(BRCA_cnv_names %in% patients))
which(!(BRCA_cnv_names %in% BRCA_clinical$tcga_participant_barcode))
length(which(BRCA_cnv_names %in% BRCA_clinical$tcga_participant_barcode))
which(!(BRCA_cnv_names %in% BRCA_clinical$tcga_participant_barcode))
length(which(!(BRCA_cnv_names %in% BRCA_clinical$tcga_participant_barcode)))
BRCA_cnv_names[518]
length(BRCA_cnv_names)
length(BRCA_clinical$tcga_participant_barcode)
