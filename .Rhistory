co.deletion.per.chromosome<- lapply(c(1,2), function(x) co.deletion_co.amplification_matrix(cancer.table, column_start = 11, threshold = -1, Chromosome = x, deletion = TRUE, normalisation = "total.tumour.number"))
dim(co.deletion.per.chromosome[[2]])
co.deletion.per.chromosome<- lapply(co.deletion.per.chromosome, function(x) as.data.frame(cbind(Gene.Symbol.row = rownames(x), x)))
gathered<- lapply(co.deletion.per.chromosome, function(x) tidyr::gather(x, Gene.Symbol.col,proportion, 2:ncol(x)))
gathered
glimpse(gathered)
dim(co.deletion.per.chromosome[[2]])
dummydata<-data.frame(gene = "MET", "CDKN2A", "CDKN2A", "RB", start = c(10, 100, 120, 300), CHR = c(9, 9, 9, 9), sample1 = c(1,1,1,1), sample2 = c(1,1,1,1), sample3 = c(0,0,0,0), sample4 = c(0, 0, 0, 0))
dummydata
dummydata<-data.frame(gene = c("MET", "CDKN2A", "CDKN2A", "RB"), start = c(10, 100, 120, 300), CHR = c(9, 9, 9, 9), sample1 = c(1,1,1,1), sample2 = c(1,1,1,1), sample3 = c(0,0,0,0), sample4 = c(0, 0, 0, 0))
dummydata
dummydata<-data.frame(gene = c("MET", "CDKN2A", "CDKN2A", "RB"), start = c(10, 100, 120, 300), CHR = c(9, 9, 9, 9), sample1 = c(-1,-1,-1,-1), sample2 = c(-1,-1,-1,-1), sample3 = c(0,0,0,0), sample4 = c(0, 0, 0, 0))
dummydata
co.deletion_co.amplification_matrix(dummydata, column_start = 4, threshold = -1, Chromosome = 9, deletion = TRUE, normalisation = "total.tumour.number")
co.deletion_co.amplification_matrix(dummydata, column_start = 4, threshold = -1, Chromosome = 9, deletion = TRUE, normalisation = "total.tumour.number")
dummydata<-data.frame(gene = c("MET", "CDKN2A", "CDKN2B", "RB", "MET2", "CDKN2A2", "CDKN2A2", "RB2"), start = c(10, 100, 120, 300, 20, 200, 220, 400), CHR = c(9, 9, 9, 9, 10, 10, 10, 10), sample1 = c(-1,-1,-1,-1, -1,-1,-1,-1), sample2 = c(-1,-1,-1,-1, 0,0,0,0), sample3 = c(0,0,0,0, 0,0,0,0), sample4 = c(0, 0, 0, 0, 0,0,0,0))
dummydata
co.deletion_co.amplification_matrix(dummydata, column_start = 4, threshold = -1, Chromosome = 9, deletion = TRUE, normalisation = "total.tumour.number")
co.deletion_co.amplification_matrix(dummydata, column_start = 4, threshold = -1, Chromosome = 10, deletion = TRUE, normalisation = "total.tumour.number")
co.deletion.per.chromosome<- lapply(c(9,10), function(x) co.deletion_co.amplification_matrix(dummydata, column_start = 4, threshold = -1, Chromosome = x, deletion = TRUE, normalisation = "total.tumour.number"))
dim(co.deletion.per.chromosome[[2]])
co.deletion.per.chromosome
dim(co.deletion.per.chromosome[[2]])
co.deletion.per.chromosome<- lapply(co.deletion.per.chromosome, function(x) as.data.frame(cbind(Gene.Symbol.row = rownames(x), x)))
co.deletion.per.chromosome
co.deletion.per.chromosome<- lapply(co.deletion.per.chromosome, function(x) as.data.frame(cbind(Gene.Symbol.row = rownames(x), x)))
co.deletion.per.chromosome
cancer.table[1:2, 1:12]
dummydata<-data.frame(Gene.Symbol = c("MET", "CDKN2A", "CDKN2B", "RB", "MET2", "CDKN2A2", "CDKN2A2", "RB2"), start = c(10, 100, 120, 300, 20, 200, 220, 400), CHR = c(9, 9, 9, 9, 10, 10, 10, 10), sample1 = c(-1,-1,-1,-1, -1,-1,-1,-1), sample2 = c(-1,-1,-1,-1, 0,0,0,0), sample3 = c(0,0,0,0, 0,0,0,0), sample4 = c(0, 0, 0, 0, 0,0,0,0))
dummydata
co.deletion_co.amplification_matrix(dummydata, column_start = 4, threshold = -1, Chromosome = 9, deletion = TRUE, normalisation = "total.tumour.number")
co.deletion_co.amplification_matrix(dummydata, column_start = 4, threshold = -1, Chromosome = 10, deletion = TRUE, normalisation = "total.tumour.number")
co.deletion.per.chromosome<- lapply(c(9,10), function(x) co.deletion_co.amplification_matrix(dummydata, column_start = 4, threshold = -1, Chromosome = x, deletion = TRUE, normalisation = "total.tumour.number"))
co.deletion.per.chromosome
dim(co.deletion.per.chromosome[[2]])
co.deletion.per.chromosome<- lapply(co.deletion.per.chromosome, function(x) as.data.frame(cbind(Gene.Symbol.row = rownames(x), x)))
co.deletion.per.chromosome
dummydata<-data.frame(Gene.Symbol = c("MET", "CDKN2A", "CDKN2B", "RB", "MET2", "CDKN2A2", "CDKN2B2", "RB2"), start = c(10, 100, 120, 300, 20, 200, 220, 400), CHR = c(9, 9, 9, 9, 10, 10, 10, 10), sample1 = c(-1,-1,-1,-1, -1,-1,-1,-1), sample2 = c(-1,-1,-1,-1, 0,0,0,0), sample3 = c(0,0,0,0, 0,0,0,0), sample4 = c(0, 0, 0, 0, 0,0,0,0))
dummydata
co.deletion_co.amplification_matrix(dummydata, column_start = 4, threshold = -1, Chromosome = 9, deletion = TRUE, normalisation = "total.tumour.number")
co.deletion_co.amplification_matrix(dummydata, column_start = 4, threshold = -1, Chromosome = 10, deletion = TRUE, normalisation = "total.tumour.number")
co.deletion.per.chromosome<- lapply(c(9,10), function(x) co.deletion_co.amplification_matrix(dummydata, column_start = 4, threshold = -1, Chromosome = x, deletion = TRUE, normalisation = "total.tumour.number"))
co.deletion.per.chromosome
dim(co.deletion.per.chromosome[[2]])
co.deletion.per.chromosome<- lapply(co.deletion.per.chromosome, function(x) as.data.frame(cbind(Gene.Symbol.row = rownames(x), x)))
co.deletion.per.chromosome
gathered<- lapply(co.deletion.per.chromosome, function(x) tidyr::gather(x, Gene.Symbol.col,proportion, 2:ncol(x)))
gathered
cbind(gathered)
rbind(gathered)
do.call(rbind, gathered)
?do.call
cancer.table
dim(cancer.table)
chromosome9[1:2,1:11]
selected.chromosome<- chromosome9
intergene.distance.table <- data.frame(matrix(NA, ncol = nrow(selected.chromosome), nrow = nrow(selected.chromosome)))
dim(intergene.distance.table)
intergene.distance.table
selected.interval<- c((1:22), "X")
selected.interval
selected.interval<- selected.interval[i]
selected.genes.start<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(start)
selected.genes.start
selected.chromosome<- chromosomal_location(short.cnv.list[[1]])
i=1
selected.interval<- selected.interval[i]
selected.interval
selected.genes.start<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(start)
selected.genes.start
selected.genes.start
class(selected.genes.start)
nrow(selected.genes.start)
intergene.distance<- selected.genes.start[,1] - selected.genes.start[1,1]
intergene.distance
dim(intergene.distance.table)
intergene.distance.table <- data.frame(matrix(NA, ncol = nrow(selected.genes.start), nrow = nrow(selected.genes.start)))
dim(intergene.distance.table)
intergene.distance.table
intergene.distance<- selected.genes.start[,1] - selected.genes.start[1,1]
selected.interval<- selected.interval[i]
selected.interval
selected.genes.start<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(start)
selected.genes.start
intergene.distance<- selected.genes.start[,1] - selected.genes.start[1,1]
length(intergene.distance)
length(selected.genes.start)
nrow(selected.genes.start)
cancer.table[1:2,1:12]
intergene.distance.table <- data.frame(matrix(NA, ncol = nrow(selected.genes.start), nrow = nrow(selected.genes.start)))
dim(intergene.distance.table)
intergene.distance.table
selected.interval<- c((1:22), "X")
selected.interval
i=1
interval.values<- c((1:22), "X")
interval.values
selected.interval<- interval.values[i]
selected.interval
interval.values<- c((1:22), "X")
interval.values
selected.interval<- interval.values[i]
selected.interval
selected.genes.start<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(start)
selected.genes.start
intergene.distance.table <- data.frame(matrix(NA, ncol = nrow(selected.genes.start), nrow = nrow(selected.genes.start)))
dim(intergene.distance.table)
intergene.distance.table
for (j in 1:nrow(selected.genes.start)) {
intergene.distance.table[,j]<- abs(selected.genes.start[,1] - selected.genes.start[j,1])
}
colnames(intergene.distance.table)<- cancer.table %>%
dplyr::select(Gene.Symbol)
rownames(intergene.distance.table)<- cancer.table %>%
dplyr::select(Gene.Symbol)
dim(intergene.distance.table)
rownames(intergene.distance.table)<- cancer.table %>%
dplyr::select(Gene.Symbol)
colnames(intergene.distance.table)<- cancer.table %>%
dplyr::select(Gene.Symbol)
head(intergene.distance.table)
j=1
intergene.distance.table[,j]<- abs(selected.genes.start[,1] - selected.genes.start[j,1])
intergene.distance.table[,j]
j=2
intergene.distance.table[,j]<- abs(selected.genes.start[,1] - selected.genes.start[j,1])
intergene.distance.table[,j]
intergene.distance.table[,1]
for (j in 1:nrow(selected.genes.start)) {
intergene.distance.table[,j]<- abs(selected.genes.start[,1] - selected.genes.start[j,1])
}
head(intergene.distance.table)
nrow(selected.genes.start)
dim(intergene.distance.table)
intergene.distance.table <- data.frame(matrix(NA, ncol = nrow(selected.genes.start), nrow = nrow(selected.genes.start)))
dim(intergene.distance.table)
intergene.distance.table
(selected.genes.start[,1]
)
selected.genes.start[j,1]
head(selected.genes.start[,1])
j
intergene.distance.table[,j]<- abs(selected.genes.start[,1] - selected.genes.start[j,1])
intergene.distance.table[,j]
intergene.distance.table[,100]
1:nrow(selected.genes.start
)
for (j in 1:nrow(selected.genes.start)) {
intergene.distance.table[,j]<- abs(selected.genes.start[,1] - selected.genes.start[j,1])
}
intergene.distance.table[,1]
intergene.distance.table[,2]
intergene.distance.table[,3]
intergene.distance.table[,30]
intergene.distance.table[,300]
intergene.distance.table[,1000]
intergene.distance.table[,1800]
intergene.distance.table
head(intergene.distance.table)
colnames(intergene.distance.table)<- cancer.table %>%
dplyr::select(Gene.Symbol)
rownames(intergene.distance.table)<- cancer.table %>%
dplyr::select(Gene.Symbol)
rownames(intergene.distance.table)<- cancer.table %>%
dplyr::select(Gene.Symbol)
nrow(intergene.distance.table)
length(cancer.table %>%
dplyr::select(Gene.Symbol))
cancer.table %>%
dplyr::select(Gene.Symbol)
rownames(intergene.distance.table)<- cancer.table %>%
dplyr::select(Gene.Symbol)
rownames(intergene.distance.table)<- cancer.table$Gene.Symbol
cancer.table$Gene.Symbol
row.names(intergene.distance.table)<- cancer.table %>%
dplyr::select(Gene.Symbol)
row.names(dummydata)
rownames(dummydata)
colnames(dummydata)
base::rownames(intergene.distance.table)<- cancer.table %>%
dplyr::select(Gene.Symbol)
base::rownames(intergene.distance.table)
length(base::rownames(intergene.distance.table))
length(cancer.table %>%
dplyr::select(Gene.Symbol))
length(cancer.table %>%
dplyr::select(Gene.Symbol)
)
cancer.table$Gene.Symbol
base::rownames(intergene.distance.table)<- cancer.table$Gene.Symbol
base::row.names(intergene.distance.table)<- cancer.table$Gene.Symbol
fff<-cancer.table$Gene.Symbol
class(fff)
base::row.names(intergene.distance.table)<- as.character(cancer.table$Gene.Symbol )
base::row.names(intergene.distance.table)<- as.character(cancer.table$Gene.Symbol )
?row.names
?rownames
base::rownames(intergene.distance.table)<- as.character(cancer.table$Gene.Symbol )
base::rownames(intergene.distance.table)<- seq(1, nrow(intergene.distance.table))
base::rownames(intergene.distance.table)<- cancer.table %>%
dplyr::select(Gene.Symbol) %>%
as.matrix
base::rownames(intergene.distance.table)<- cancer.table %>%
dplyr::select(Gene.Symbol) %>%
as.matrix()
cancer.table2<-as.matrix(cancer.table)
colnames(cancer.table2)
rownames(intergene.distance.table)<- cancer.table2$Gene.Symbol
row.names(intergene.distance.table)<- cancer.table2$Gene.Symbol
row.names(intergene.distance.table)<- cancer.table$Gene.Symbol
length(cancer.table$Gene.Symbol)
Gene.Symbol<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(Gene.Symbol)
Gene.Symbol
length(Gene.Symbol)
Gene.Symbol<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(Gene.Symbol) %>%
as.character()
length(Gene.Symbol)
Gene.Symbol<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(Gene.Symbol)
Gene_Symbol<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(Gene.Symbol)
Gene_Symbol
Gene_Symbol<-as.character(Gene_Symbol)
classs(Gene_Symbol)
class(Gene_Symbol)
colnames(intergene.distance.table)<- Gene_Symbol
length(Gene_Symbol)
Gene_Symbol<-as.vector(Gene_Symbol)
class(Gene_Symbol)
length(Gene_Symbol)
Gene_Symbol<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(Gene.Symbol) %>%
as.character(.[,1])
class(Gene_Symbol)
length(Gene_Symbol)
Gene_Symbol<-as.vector(Gene_Symbol[,1])
class(Gene_Symbol)
Gene_Symbol
Gene_Symbol<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(Gene.Symbol)
Gene_Symbol<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(Gene.Symbol) %>%
t() %>% #required to convert output from data.frame to vector
as.character()
class(Gene_Symbol)
length(Gene_Symbol)
colnames(intergene.distance.table)<- Gene_Symbol
rownames(intergene.distance.table)<- Gene_Symbol
intergene.distance.table <- data.frame(matrix(NA, ncol = nrow(selected.genes.start), nrow = nrow(selected.genes.start)))
dim(intergene.distance.table)
intergene.distance.table
for (j in 1:nrow(selected.genes.start)) {
intergene.distance.table[,j]<- abs(selected.genes.start[,1] - selected.genes.start[j,1])
}
Gene_Symbol<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(Gene.Symbol) %>%
t() %>% #required to convert output from data.frame to vector
as.character()
class(Gene_Symbol)
length(Gene_Symbol)
colnames(intergene.distance.table)<- Gene_Symbol
rownames(intergene.distance.table)<- Gene_Symbol
intergene.distance.table [1:2, 1:1800]
getwd()
setwd("/Users/Matt/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/")
write.csv(intergene.distance.table, file = "intergene.distance.table.csv")
dim(cancer.table)
interval.values<- c((1:22), "X")
interval.values
selected.genes.start<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(start)
selected.genes.start
intergene.distance.table <- data.frame(matrix(NA, ncol = nrow(selected.genes.start), nrow = nrow(selected.genes.start)))
dim(intergene.distance.table)
intergene.distance.table
for (j in 1:nrow(selected.genes.start)) {
intergene.distance.table[,j]<- abs(selected.genes.start[,1] - selected.genes.start[j,1])
}
Gene_Symbol<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(Gene.Symbol) %>%
t() %>% #required to convert output from data.frame to vector
as.character()
class(Gene_Symbol)
length(Gene_Symbol)
colnames(intergene.distance.table)<- Gene_Symbol
rownames(intergene.distance.table)<- Gene_Symbol
intergene_distance_function<- function(cancer.table, selected.interval){
selected.genes.start<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(start)
selected.genes.start
intergene.distance.table <- data.frame(matrix(NA, ncol = nrow(selected.genes.start), nrow = nrow(selected.genes.start)))
dim(intergene.distance.table)
intergene.distance.table
for (j in 1:nrow(selected.genes.start)) {
intergene.distance.table[,j]<- abs(selected.genes.start[,1] - selected.genes.start[j,1])
}
Gene_Symbol<- cancer.table %>%
dplyr::filter(CHR == selected.interval) %>%
dplyr::select(Gene.Symbol) %>%
t() %>% #required to convert output from data.frame to vector
as.character()
class(Gene_Symbol)
length(Gene_Symbol)
colnames(intergene.distance.table)<- Gene_Symbol
rownames(intergene.distance.table)<- Gene_Symbol
return(intergene.distance.table)
}
selected.interval
test<-intergene_distance_function(cancer.table, x)
x<- selected.interval
test<-intergene_distance_function(cancer.table, selected.interval = x)
test<-intergene_distance_function(cancer.table, selected.interval = x)
identical(test, intergene.distance.table)
intergene_distance<-lapply(c(1,2), function(x) intergene_distance_function(cancer.table, selected.interval = x))
dim(intergene_distance[[1]])
dim(intergene_distance[[2]])
intergene_distance<-lapply(c((1:22), "X"), function(x) intergene_distance_function(cancer.table, selected.interval = x))
intergene_distance[[2]]
dim(intergene_distance[[2]])
glimpse(intergene_distance[[2]])
intergene_distance<- lapply(intergene_distance, function(x) as.data.frame(cbind(Gene.Symbol.row = rownames(x), x)))
dim(intergene_distance[[2]])
gathered_intergene_distance<- lapply(intergene_distance, function(x) tidyr::gather(x, Gene.Symbol.col,proportion, 2:ncol(x)))
dim(intergene_distance[[2]])
dim(gathered_intergene_distance[[2]])
glimpse(gathered_intergene_distance)
selected_intergene_distance<- do.call(rbind, gathered_intergene_distance)
dim(selected_intergene_distance)
nrow(cancer.table)
24776*24776
17500*17500
co.deletion.per.chromosome<- lapply(c((1:22), "X"), function(x) co.deletion_co.amplification_matrix(cancer.table, column_start = 11, threshold = -1, Chromosome = x, deletion = TRUE, normalisation = "total.tumour.number"))
dim(co.deletion.per.chromosome[[2]])
co.deletion.per.chromosome<- lapply(co.deletion.per.chromosome, function(x) as.data.frame(cbind(Gene.Symbol.row = rownames(x), x)))
gathered<- lapply(co.deletion.per.chromosome, function(x) tidyr::gather(x, Gene.Symbol.col,proportion, 2:ncol(x)))
glimpse(gathered)
gathered.co.deletion.per.chromosome<- do.call(rbind, gathered)
dim(gathered.co.deletion.per.chromosome)
dim(selected_intergene_distance)
co-deletions.plot.table<- cbind(inter_gene_distance = selected_intergene_distance, co_deletions = gathered.co.deletion.per.chromosome)
co_deletions_plot_table<- cbind(inter_gene_distance = selected_intergene_distance, co_deletions = gathered.co.deletion.per.chromosome)
head(co_deletions_plot_table)
co_deletions_plot_table<- cbind(inter_gene_distance = selected_intergene_distance$proportion, co_deletions = gathered.co.deletion.per.chromosome$proportion)
head(co_deletions_plot_table)
co_deletions_plot_table<- cbind(inter_gene_distance = selected_intergene_distance, co_deletions = gathered.co.deletion.per.chromosome$proportion)
head(co_deletions_plot_table)
ggplot(co_deletions_plot_table, aes(x = inter_gene_distance.proportion, y = co_deletions)) +
geom_point()
ggplot(co_deletions_plot_table, aes(x = inter_gene_distance.proportion[1:100], y = co_deletions[1:100])) +
geom_point(size = 1, shape = 1)
ggplot(co_deletions_plot_table, aes(x = inter_gene_distance.proportion[1:100,], y = co_deletions[1:100,])) +
geom_point(size = 1, shape = 1)
small.co_deletions_plot_table<- co_deletions_plot_table[1:100,]
ggplot(small.co_deletions_plot_table, aes(x = inter_gene_distance.proportion, y = co_deletions)) +
geom_point(size = 1, shape = 1)
small.co_deletions_plot_table<- co_deletions_plot_table[1:10000,]
ggplot(small.co_deletions_plot_table, aes(x = inter_gene_distance.proportion, y = co_deletions)) +
geom_point(size = 1, shape = 1)
dim(co_deletions_plot_table)
dummy<-data.frame(gene1 = co_deletions_removed_zeros_plot_table[1:10,1],
gene2 = co_deletions_removed_zeros_plot_table[1:10,2],
x = c(1,2,0,4,5,6,7,8,0, 10),
y = c(1,2,3,4,0,6,0,8,9, 10)
)
dummy<-data.frame(gene1 = co_deletions_plot_table[1:10,1],
gene2 = co_deletions_plot_table[1:10,2],
x = c(1,2,0,4,5,6,7,8,0, 10),
y = c(1,2,3,4,0,6,0,8,9, 10)
)
dummy
dummy %>%
dplyr::filter(x != 0)
dummy %>%
dplyr::filter(x != 0) %>%
dplyr::filter(y != 0)
head(co_deletions_plot_table)
co_deletions_removed_zeros_plot_table<-co_deletions_plot_table %>%
dplyr::filter(inter_gene_distance.proportion != 0) %>%
dplyr::filter(co_deletions != 0)
dim(co_deletions_removed_zeros_plot_table)
dim(co_deletions_plot_table)
small.co_deletions_plot_table<- co_deletions_removed_zeros_plot_table[1:10000,]
ggplot(small.co_deletions_plot_table, aes(x = inter_gene_distance.proportion, y = co_deletions)) +
geom_point(size = 1, shape = 1)
ggplot(co_deletions_removed_zeros_plot_table, aes(x = inter_gene_distance.proportion, y = co_deletions)) +
geom_point(size = 1, shape = 1)
small.co_deletions_plot_table<- co_deletions_removed_zeros_plot_table[1:100000,]
small.co_deletions_plot_table<- co_deletions_removed_zeros_plot_table[1:10000,]
ggplot(small.co_deletions_plot_table, aes(x = inter_gene_distance.proportion, y = co_deletions)) +
geom_point(size = 1, shape = 1) +
geom_smooth()
class(small.co_deletions_plot_table[,3])
class(small.co_deletions_plot_table[,4])
small.co_deletions_plot_table<- co_deletions_removed_zeros_plot_table[1:10000,]
ggplot(small.co_deletions_plot_table, aes(x = as.numeric(inter_gene_distance.proportion), y = as.numeric(co_deletions))) +
geom_point(size = 1, shape = 1) +
geom_smooth()
ggplot(co_deletions_removed_zeros_plot_table, aes(x = inter_gene_distance.proportion, y = co_deletions)) +
geom_point(size = 1, shape = 1) +
geom_smooth()
ggplot(co_deletions_removed_zeros_plot_table, aes(x = as.numeric(inter_gene_distance.proportion), y = as.numeric(co_deletions))) +
geom_point(size = 1, shape = 1) +
geom_smooth()
dim(gathered_intergene_distance[[2]])
names(gathered_intergene_distance)
length(gathered_intergene_distance)
class(co_deletions_removed_zeros_plot_table[,3])
class(co_deletions_removed_zeros_plot_table[,4])
ggplot(co_deletions_removed_zeros_plot_table, aes(x = inter_gene_distance.proportion, y = as.integer(co_deletions))) +
geom_point(size = 1, shape = 1) +
geom_smooth()
co_deletions_removed_zeros_plot_table$co_deletions
as.numeric(co_deletions_removed_zeros_plot_table$co_deletions)
as.integer(co_deletions_removed_zeros_plot_table$co_deletions)
as.numeric(levels(co_deletions_removed_zeros_plot_table$co_deletions))[co_deletions_removed_zeros_plot_table$co_deletions]
class(co_deletions_removed_zeros_plot_table[,4])
class(co_deletions_removed_zeros_plot_table[,4])
co_deletions_removed_zeros_plot_table$co_deletions<- as.numeric(levels(co_deletions_removed_zeros_plot_table$co_deletions))[co_deletions_removed_zeros_plot_table$co_deletions]
class(co_deletions_removed_zeros_plot_table[,4])
ggplot(co_deletions_removed_zeros_plot_table, aes(x = inter_gene_distance.proportion, y = co_deletions)) +
geom_point(size = 1, shape = 1) +
geom_smooth()
range(co_deletions_removed_zeros_plot_table$co_deletions)
glimpse(gathered_intergene_distance[[2]])
names(gathered_intergene_distance)
names(gathered_intergene_distance)<-c((1:22), "X")
names(gathered_intergene_distance)
names(gathered_intergene_distance[[1]])
names(gathered_intergene_distance[1])
gathered_intergene_distance2<- lapply(gathered_intergene_distance, function(x) as.data.frame(cbind(names[x], chromosome = rep(,nrow(x)))))
gathered_intergene_distance2<- lapply(gathered_intergene_distance, function(x) as.data.frame(cbind(names(x), chromosome = rep(,nrow(x)))))
?Map
gathered_intergene_distance2<- lapply(gathered_intergene_distance, function(x) as.data.frame(cbind(x, chromosome = rep(names(x),nrow(x)))))
head(gathered_intergene_distance[[2]])
head(gathered_intergene_distance2[[2]])
test<-do.call(cbind, gathered_intergene_distance[], chromosome = names(my_list)))
test<-Map(cbind, gathered_intergene_distance, chromosome = names(my_list))
test<-Map(cbind, gathered_intergene_distance, chromosome = names(gathered_intergene_distance))
head(test[[1]])
head(test[[2]])
head(test[[23]])
tail(test[[23]])
gathered_intergene_distance2<-Map(cbind, gathered_intergene_distance, chromosome = names(gathered_intergene_distance))
selected_intergene_distance2<- do.call(rbind, gathered_intergene_distance2)
dim(selected_intergene_distance2)
co_deletions_plot_table2<- cbind(inter_gene_distance = selected_intergene_distance2, co_deletions = gathered.co.deletion.per.chromosome$proportion)
head(co_deletions_plot_table2)
dim(co_deletions_plot_table2)
tail(co_deletions_plot_table2)
co_deletions_removed_zeros_plot_table2<-co_deletions_plot_table2 %>%
dplyr::filter(inter_gene_distance.proportion != 0) %>%
dplyr::filter(co_deletions != 0)
dim(co_deletions_removed_zeros_plot_table)
class(co_deletions_removed_zeros_plot_table2[,4])
co_deletions_removed_zeros_plot_table2$co_deletions<- as.numeric(levels(co_deletions_removed_zeros_plot_table2$co_deletions))[co_deletions_removed_zeros_plot_table2$co_deletions]
class(co_deletions_removed_zeros_plot_table2[,4])
class(co_deletions_removed_zeros_plot_table2[,5])
co_deletions_removed_zeros_plot_table2$co_deletions<- as.numeric(levels(co_deletions_removed_zeros_plot_table2$co_deletions))[co_deletions_removed_zeros_plot_table2$co_deletions]
class(co_deletions_removed_zeros_plot_table2[,5])
head(co_deletions_removed_zeros_plot_table2)
ggplot(co_deletions_removed_zeros_plot_table2, aes(x = inter_gene_distance.proportion, y = co_deletions)) +
geom_point(size = 1, shape = 1) +
geom_smooth() +
xlab("Inter gene distance") +
ylab("Proportion of tumours with co-deletion")
ggplot(co_deletions_removed_zeros_plot_table2, aes(x = inter_gene_distance.proportion,
y = co_deletions,
colour = inter_gene_distance.chromosome)) +
geom_point(size = 1, shape = 1) +
geom_smooth() +
xlab("Inter gene distance") +
ylab("Proportion of tumours with co-deletion") +
scale_color_discrete()+
labs(colour ="Chromosome")
range(co_deletions_removed_zeros_plot_table2$co_deletions)
names(short.cnv.list)
saveRDS(co_deletions_removed_zeros_plot_table2, "/Users/Matt/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/R workspaces/BRCA_co_deletion_distance_plot_table.rds")
outlying_genes<-co_deletions_removed_zeros_plot_table2 %>%
dplyr::filter(inter_gene_distance.proportion > 5.0e+07) %>%
dplyr::filter(co_deletions > 0.015)
dim(outlying_genes)
head(outlying_genes)
tail(outlying_genes)
outlying_genes %>%
dplyr::filter(inter_gene_distance.chromosome == 9)
outlying_genes %>%
dplyr::filter(inter_gene_distance.chromosome == 9) %>%
dim()
outlying_genes %>%
dplyr::filter(inter_gene_distance.chromosome == 8) %>%
dim()
