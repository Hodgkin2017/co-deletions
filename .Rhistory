()
dplyr::between(selection_criteria[1], selection_criteria[2])
selection_criteria
selection_criteria[1]
selection_criteria[2]
matrix$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2])
object_name %>% dplyr::filter(CHR %in% Chromosome)  %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
object_name %>% dplyr::filter(CHR %in% Chromosome)
matrix<- object_name %>% dplyr::filter(CHR %in% Chromosome)
matrix$start
selection_criteria
matrix$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2])
matrix$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
matrix<- matrix$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
dim(cnv.matrix)
create.heatmap.matrix.ampl.del.optimised<- function(object_name, column_start = 11, threshold = -1,
selection_criteria, Gene.Symbol = FALSE, start = FALSE,
Chromosome = 0, Cytoband = FALSE, deletion = TRUE){
if (Gene.Symbol == TRUE){
matrix<- object_name %>% dplyr::filter(Gene.Symbol %in% selection_criteria)
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else if (Chromosome[1] > 0 & start == FALSE){
matrix<- object_name %>% dplyr::filter(CHR %in% Chromosome)
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else if (start == TRUE & Chromosome[1] == 0){
##filter by chromosome 1st?
# matrix<- matrix$start %>%
#   dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
#   object_name[.,]
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
}  else if (start == TRUE & Chromosome[1] > 0){
matrix<- object_name %>% dplyr::filter(CHR %in% Chromosome)
matrix<- matrix$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else if (Cytoband == TRUE){
matrix<- object_name %>% dplyr::filter(Cytoband %in% selection_criteria)
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else {
##Convert CNV data to matrix:
cnv.matrix<- as.matrix(object_name[,column_start:ncol(object_name)])
rownames(cnv.matrix)<- object_name$Gene.Symbol
}
##Create a binary matrix of CNV data such that deletions (deletion = TRUE) or
#amplifications (deletion = FALSE) below (for deletions) or above (for amplifications) a threshold = 1
if (deletion == TRUE) {
#cnv.matrix[cnv.matrix > threshold] = 0
#cnv.matrix = -cnv.matrix
cnv.matrix<- ifelse(cnv.matrix <= threshold, 1, 0)
} else {
#cnv.matrix<- cnv.matrix >= threshold
#cnv.matrix[cnv.matrix < threshold] = 0
cnv.matrix<- ifelse(cnv.matrix >= threshold, 1, 0)
}
## Calculate total number of co-deletions or amplifications
heatmap.matrix<- cnv.matrix%*%t(cnv.matrix)
heatmap.matrix<- heatmap.matrix/ncol(cnv.matrix)
##NaN caused when rowSums = 0. Replace NaN with 0
#cnv.matrix[cnv.matrix == NaN] = 0
heatmap.matrix[is.nan(heatmap.matrix)] = 0
## Add row and column names
#rownames(heatmap.matrix)<- rownames(object_name)
#colnames(heatmap.matrix)<- rownames(object_name)
return(heatmap.matrix)
}
test6<-create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = -1, Chromosome = 9, start = TRUE, selection_criteria = c(100000, 250000), deletion = TRUE)
dim(test6)
test3<- create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = -1, Chromosome = 9, deletion = TRUE)
dim(test3)
test5<- create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = -1, start = TRUE, selection_criteria = c(100000, 250000), deletion = TRUE)
dim(test5)
selection_criteria
object_name$start
matrix %>% .$start
matrix %>% .$start %>% is.na()
matrix %>% .$start %>% !is.na()
matrix %>% .$start %>% -is.na()
matrix %>% .$start %>% is.na()
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
dim(matrix)
matrix %>% .$start %>% !(is.na())
matrix %>% .$start %>% -is.na()
matrix %>% .$start %>% is.na() %>% (!)
matrix %>% .$start %>% is.na(!)
matrix %>% .$start %>% is.na()
matrix %>% .$start %>% !=is.na()
matrix %>% .$start %>% which(is.na())
matrix %>% .$start %>% which(is.na(.))
which(is.na(matrix))
which(!is.na(matrix))
matrix %>% which(!is.na(.))
which(!is.na(matrix))
which(!is.na(matrix)) %>% matrix[.,]
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
dim(which(!is.na(matrix)) %>% matrix[.,])
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
dim(matrix)
head(matrix)
matrix<- which(!is.na(matrix)) %>% matrix[.,]
dim(matrix)
head(matrix)
selection_criteria
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
head(matrix)
object_name$start %>%
()
object_name$start
object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2])
object_name[2,]
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
head(matrix)
which(!is.na(matrix))
matrix<- which(!is.na(matrix)) %>% matrix[.,]
dim(matrix)
head(matrix)
tailmatrix)
tail(matrix)
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
matrix<- which(!is.na(matrix)) %>% matrix[.,]
tail(matrix)
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
head(matrix, 30)
matrix$CHR
matrix$start
matrix<- which(!is.na(matrix)) %>% matrix[.,]
matrix$start
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
matrix<- which(!is.na(matrix)) %>% matrix[.,]
matrix$start
head(matrix)
tail(matrix)
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
matrix %>% dplyr::filter(start == NA)
length(matrix %>% dplyr::filter(start == NA))
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
matrix %>% dplyr::filter(start == is.na)
matrix %>% filter(!is.na(start))
length(rownames(cnv.matrix)<- matrix$Gene.Symbol)
length(matrix %>% filter(!is.na(start)))
length(matrix %>% filter(is.na(start)))
dim(maytrix)
dim(matrix)
is.na(matrix$start)
!is.na(matrix$start)
sum(!is.na(matrix$start))
sum(is.na(matrix$start))
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
matrix %>% !is.na(.$start)
!is.na(matrix$start) %>% matrix[.,]
filter(!is.na(start))
filter(!is.na(start))
matrix %>%filter(!is.na(start))
matrix <<- %filter(!is.na(start))
matrix <<- filter(!is.na(start))
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
matrix <- matrix %>% filter(!is.na(start))
matrix$CHR
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
start == TRUE & Chromosome[1] == 0
create.heatmap.matrix.ampl.del.optimised<- function(object_name, column_start = 11, threshold = -1,
selection_criteria, Gene.Symbol = FALSE, start = FALSE,
Chromosome = 0, Cytoband = FALSE, deletion = TRUE){
if (Gene.Symbol == TRUE){
matrix<- object_name %>% dplyr::filter(Gene.Symbol %in% selection_criteria)
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else if (Chromosome[1] > 0 & start == FALSE){
matrix<- object_name %>% dplyr::filter(CHR %in% Chromosome)
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else if (start == TRUE & Chromosome[1] == 0){
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
matrix <- matrix %>% filter(!is.na(start))
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
}  else if (start == TRUE & Chromosome[1] > 0){
matrix<- object_name %>% dplyr::filter(CHR %in% Chromosome)
matrix<- matrix$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else if (Cytoband == TRUE){
matrix<- object_name %>% dplyr::filter(Cytoband %in% selection_criteria)
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else {
##Convert CNV data to matrix:
cnv.matrix<- as.matrix(object_name[,column_start:ncol(object_name)])
rownames(cnv.matrix)<- object_name$Gene.Symbol
}
##Create a binary matrix of CNV data such that deletions (deletion = TRUE) or
#amplifications (deletion = FALSE) below (for deletions) or above (for amplifications) a threshold = 1
if (deletion == TRUE) {
#cnv.matrix[cnv.matrix > threshold] = 0
#cnv.matrix = -cnv.matrix
cnv.matrix<- ifelse(cnv.matrix <= threshold, 1, 0)
} else {
#cnv.matrix<- cnv.matrix >= threshold
#cnv.matrix[cnv.matrix < threshold] = 0
cnv.matrix<- ifelse(cnv.matrix >= threshold, 1, 0)
}
## Calculate total number of co-deletions or amplifications
heatmap.matrix<- cnv.matrix%*%t(cnv.matrix)
heatmap.matrix<- heatmap.matrix/ncol(cnv.matrix)
##NaN caused when rowSums = 0. Replace NaN with 0
#cnv.matrix[cnv.matrix == NaN] = 0
heatmap.matrix[is.nan(heatmap.matrix)] = 0
## Add row and column names
#rownames(heatmap.matrix)<- rownames(object_name)
#colnames(heatmap.matrix)<- rownames(object_name)
return(heatmap.matrix)
}
matrix
matrix$Gene.Symbol
wee<- matrix$Gene.Symbol
test5<- create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = -1, start = TRUE, selection_criteria = c(100000, 250000), deletion = TRUE)
dim(test5)
test5
col.names(test5)
colnames(test5)
identical(col.names(test5), wee)
identical(colnames(test5), wee)
test5<- create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = -1, start = TRUE, selection_criteria = c(100000, 250000), deletion = TRUE)
pheatmap(test5,
cluster_row = F,
cluster_cols = F,
show_rownames = FALSE,
show_colnames = FALSE
)
test6<-create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = -1, Chromosome = 9, start = TRUE, selection_criteria = c(100000, 250000), deletion = TRUE)
pheatmap(test6,
cluster_row = F,
cluster_cols = F,
show_rownames = FALSE,
show_colnames = FALSE
)
dim(test6)
object_name %>% filter(CHR == 9) %>% range()
object_name %>% filter(CHR == 9) %>% select(start) %>% range()
object_name %>% filter(CHR == 9) %>% select(start)
object_name %>% filter(CHR == 9)
object_name %>% filter(CHR == 9) %>% select(start)
object_name %>% filter(CHR == 9) %>% select("start")
object_name %>% dplyr::select("start")
colnames(object_name)
object_name %>% dplyr::select(start)
object_name %>% filter(CHR == 9) %>% %>% dplyr::select(start)
object_name %>% filter(CHR == 9) %>% dplyr::select(start)
object_name %>% filter(CHR == 9) %>% dplyr::select(start) %>% range()
test7<-create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = -1, Chromosome = 9, start = TRUE, selection_criteria = c(100000, 25000000), deletion = TRUE)
dim(test7)
test6<-create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = -1, Chromosome = 9, start = TRUE, selection_criteria = c(100000, 250000), deletion = TRUE)
dim(test6)
create.heatmap.matrix.ampl.del.optimised<- function(object_name, column_start = 11, threshold = -1,
selection_criteria, Gene.Symbol = FALSE, start = FALSE,
Chromosome = 0, Cytoband = FALSE, deletion = TRUE){
if (Gene.Symbol == TRUE){
matrix<- object_name %>% dplyr::filter(Gene.Symbol %in% selection_criteria)
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else if (Chromosome[1] > 0 & start == FALSE){
matrix<- object_name %>% dplyr::filter(CHR %in% Chromosome)
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else if (start == TRUE & Chromosome[1] == 0){
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
matrix <- matrix %>% filter(!is.na(start))
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
}  else if (start == TRUE & Chromosome[1] > 0){
matrix<- object_name %>% dplyr::filter(CHR %in% Chromosome)
matrix<- matrix$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else if (Cytoband == TRUE){
matrix<- object_name %>% dplyr::filter(Cytoband %in% selection_criteria)
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else {
##Convert CNV data to matrix:
cnv.matrix<- as.matrix(object_name[,column_start:ncol(object_name)])
rownames(cnv.matrix)<- object_name$Gene.Symbol
}
##Create a binary matrix of CNV data such that deletions (deletion = TRUE) or
#amplifications (deletion = FALSE) below (for deletions) or above (for amplifications) a threshold = 1
if (deletion == TRUE) {
#cnv.matrix[cnv.matrix > threshold] = 0
#cnv.matrix = -cnv.matrix
cnv.matrix<- ifelse(cnv.matrix <= threshold, 1, 0)
} else {
#cnv.matrix<- cnv.matrix >= threshold
#cnv.matrix[cnv.matrix < threshold] = 0
cnv.matrix<- ifelse(cnv.matrix >= threshold, 1, 0)
}
## Calculate total number of co-deletions or amplifications
heatmap.matrix<- cnv.matrix%*%t(cnv.matrix)
heatmap.matrix<- heatmap.matrix/ncol(cnv.matrix)
##NaN caused when rowSums = 0. Replace NaN with 0
#cnv.matrix[cnv.matrix == NaN] = 0
heatmap.matrix[is.nan(heatmap.matrix)] = 0
## Add row and column names
#rownames(heatmap.matrix)<- rownames(object_name)
#colnames(heatmap.matrix)<- rownames(object_name)
return(heatmap.matrix)
}
test6<-create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = -1, Chromosome = 9, start = TRUE, selection_criteria = c(100000, 250000), deletion = TRUE)
dim(test6)
CHR
Chromosome
matrix<- object_name %>% dplyr::filter(CHR %in% Chromosome)
dim(matrix)
Chromosome[1] > 0
start == TRUE
start == TRUE & Chromosome[1] == 0
start == TRUE & Chromosome[1] > 0
matrix<- object_name %>% dplyr::filter(CHR %in% Chromosome)
selection_criteria
matrix<- matrix$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
matrix$CHR
matrix<- object_name %>% dplyr::filter(CHR %in% Chromosome)
matrix$CHR
matrix$start
matrix<- object_name %>% dplyr::filter(CHR %in% Chromosome)
matrix<- matrix$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
matrix[.,]
matrix$CHR
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
matrix <- matrix %>% filter(!is.na(start))
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
cnv.matrix$chr
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
matrix <- matrix %>% filter(!is.na(start))
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
matrix$CHR
matrix$start
create.heatmap.matrix.ampl.del.optimised<- function(object_name, column_start = 11, threshold = -1,
selection_criteria, Gene.Symbol = FALSE, start = FALSE,
Chromosome = 0, Cytoband = FALSE, deletion = TRUE){
if (Gene.Symbol == TRUE){
matrix<- object_name %>% dplyr::filter(Gene.Symbol %in% selection_criteria)
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else if (Chromosome[1] > 0 & start == FALSE){
matrix<- object_name %>% dplyr::filter(CHR %in% Chromosome)
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else if (start == TRUE & Chromosome[1] == 0){
matrix<- object_name$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
object_name[.,]
matrix <- matrix %>% filter(!is.na(start))
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
}  else if (start == TRUE & Chromosome[1] > 0){
#object_name %>% filter(CHR == 9) %>% dplyr::select(start)
matrix<- object_name %>% dplyr::filter(CHR %in% Chromosome)
matrix<- matrix$start %>%
dplyr::between(selection_criteria[1], selection_criteria[2]) %>%
matrix[.,]
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else if (Cytoband == TRUE){
matrix<- object_name %>% dplyr::filter(Cytoband %in% selection_criteria)
cnv.matrix<- as.matrix(matrix[,column_start:ncol(matrix)])
rownames(cnv.matrix)<- matrix$Gene.Symbol
} else {
##Convert CNV data to matrix:
cnv.matrix<- as.matrix(object_name[,column_start:ncol(object_name)])
rownames(cnv.matrix)<- object_name$Gene.Symbol
}
##Create a binary matrix of CNV data such that deletions (deletion = TRUE) or
#amplifications (deletion = FALSE) below (for deletions) or above (for amplifications) a threshold = 1
if (deletion == TRUE) {
#cnv.matrix[cnv.matrix > threshold] = 0
#cnv.matrix = -cnv.matrix
cnv.matrix<- ifelse(cnv.matrix <= threshold, 1, 0)
} else {
#cnv.matrix<- cnv.matrix >= threshold
#cnv.matrix[cnv.matrix < threshold] = 0
cnv.matrix<- ifelse(cnv.matrix >= threshold, 1, 0)
}
## Calculate total number of co-deletions or amplifications
heatmap.matrix<- cnv.matrix%*%t(cnv.matrix)
heatmap.matrix<- heatmap.matrix/ncol(cnv.matrix)
##NaN caused when rowSums = 0. Replace NaN with 0
#cnv.matrix[cnv.matrix == NaN] = 0
heatmap.matrix[is.nan(heatmap.matrix)] = 0
## Add row and column names
#rownames(heatmap.matrix)<- rownames(object_name)
#colnames(heatmap.matrix)<- rownames(object_name)
return(heatmap.matrix)
}
test6<-create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = -1, Chromosome = 9, start = TRUE, selection_criteria = c(100000, 250000), deletion = TRUE)
dim(test6)
test7<-create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = -1, Chromosome = 9, start = TRUE, selection_criteria = c(100000, 25000000), deletion = TRUE)
dim(test7)
pheatmap(test7,
cluster_row = F,
cluster_cols = F,
show_rownames = FALSE,
show_colnames = FALSE
)
test7<-create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = -1, Chromosome = 9, start = TRUE, selection_criteria = c(100000, 50000000), deletion = TRUE)
dim(test7)
pheatmap(test7,
cluster_row = F,
cluster_cols = F,
show_rownames = FALSE,
show_colnames = FALSE
)
test4<- create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = -1, Cytoband = TRUE, selection_criteria = c("9p21.2", "9p21.3"), deletion = TRUE)
dim(test4)
pheatmap(test4,
cluster_row = F,
cluster_cols = F,
show_rownames = FALSE,
show_colnames = FALSE
)
test2<- create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = -1, Gene.Symbol = TRUE, selection_criteria = c("MET", "CDKN2A"), deletion = TRUE)
dim(test2)
test2<- create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = -1, Gene.Symbol = TRUE, selection_criteria = c("MET", "CDKN2A", "RB1", "WWOX",
"LRP1B", "PDE4D", "CCNE1", "TP53",
"FGFR1", "MYC", "EGFR","WHSC1L1",
"ERBB2", "MCL1", "MDM2", "CCND1", "ATM",
"NOTCH1", "PPP2R2A", "BRD4", "ARID1A",
"STK11", "PARK2"), deletion = TRUE)
dim(test2)
pheatmap(test2,
cluster_row = F,
cluster_cols = F,
show_rownames = TRUE,
show_colnames = TRUE
)
test2a<- create.heatmap.matrix.ampl.del.optimised(acc.cnv.chr.location, column_start = 11, threshold = 1, Gene.Symbol = TRUE, selection_criteria = c("MET", "CDKN2A", "RB1", "WWOX",
"LRP1B", "PDE4D", "CCNE1", "TP53",
"FGFR1", "MYC", "EGFR","WHSC1L1",
"ERBB2", "MCL1", "MDM2", "CCND1", "ATM",
"NOTCH1", "PPP2R2A", "BRD4", "ARID1A",
"STK11", "PARK2"), deletion = FALSE)
pheatmap(test2a,
cluster_row = F,
cluster_cols = F,
show_rownames = TRUE,
show_colnames = TRUE
)
