lines(pc.weight.proportion.true[,1], pc.weight.proportion.true[,6], type = "o", pch = 1, col = colours[5])
lines(pc.weight.proportion.true[,1], pc.weight.proportion.true[,7], type = "o", pch = 1, col = colours[6])
lines(pc.weight.proportion.true[,1], pc.weight.proportion.true[,8], type = "o", pch = 1, col = colours[7])
lines(pc.weight.proportion.true[,1], pc.weight.proportion.true[,9], type = "o", pch = 1, col = colours[8])
lines(pc.weight.proportion.true[,1], pc.weight.proportion.true[,10], type = "o", pch = 1, col = colours[9])
lines(pc.weight.proportion.true[,1], pc.weight.proportion.true[,11], type = "o", pch = 1, col = colours[10])
plot(pc.weight.proportion.true[,1], pc.weight.proportion.true[,2], type = "o", pch = 1, xlab = "Number of ranked pairs considered", ylab = "Proportion of contacts accurately predicted", col = colours[1], ylim = c(0,1))
lines(pc.weight.proportion.true[,1], pc.weight.proportion.true[,3], type = "o", pch = 1, col = colours[2])
lines(pc.weight.proportion.true[,1], pc.weight.proportion.true[,4], type = "o", pch = 1, col = colours[3])
lines(pc.weight.proportion.true[,1], pc.weight.proportion.true[,5], type = "o", pch = 1, col = colours[4])
lines(pc.weight.proportion.true[,1], pc.weight.proportion.true[,6], type = "o", pch = 1, col = colours[5])
lines(pc.weight.proportion.true[,1], pc.weight.proportion.true[,7], type = "o", pch = 1, col = colours[6])
lines(pc.weight.proportion.true[,1], pc.weight.proportion.true[,8], type = "o", pch = 1, col = colours[7])
lines(pc.weight.proportion.true[,1], pc.weight.proportion.true[,9], type = "o", pch = 1, col = colours[8])
lines(pc.weight.proportion.true[,1], pc.weight.proportion.true[,10], type = "o", pch = 1, col = colours[9])
lines(pc.weight.proportion.true[,1], pc.weight.proportion.true[,11], type = "o", pch = 1, col = colours[10])
legend("topright", # places a legend at the appropriate place
c("pc_weight = 0.1","pc_weight = 0.2","pc_weight = 0.3","pc_weight = 0.4","pc_weight = 0.5", "pc_weight = 0.6", "pc_weight = 0.7", "pc_weight = 0.8", "pc_weight = 0.9", "pc_weight = 1.0"), # puts text in the legend
lty=c(1,1), pch=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(1,1),col=c(colours),
bty = "n", cex = 0.7) # gives the legend lines the correct color and width
cadh.di.scores.compared<- read.csv("/Users/Matt/Documents/Masters_Bioinformatics/Modules/Structural Biology/Assignment 3/Part C/1JWL/LACI_ECOLI_e40_n2_m40_DIScoresCompared.csv", header = FALSE)
cadh.di.scores.compared
lac.di.scores.compared<- read.csv("/Users/Matt/Documents/Masters_Bioinformatics/Modules/Structural Biology/Assignment 3/Part C/2O72/CADH1_HUMAN_e3_n2_m40_DIScoresCompared.csv", header = FALSE)
lac.di.scores.compared
lac.di.scores.compared<- read.csv("/Users/Matt/Documents/Masters_Bioinformatics/Modules/Structural Biology/Assignment 3/Part C/1JWL/LACI_ECOLI_e40_n2_m40_DIScoresCompared.csv", header = FALSE)
lac.di.scores.compared
cadh.di.scores.compared<- read.csv("/Users/Matt/Documents/Masters_Bioinformatics/Modules/Structural Biology/Assignment 3/Part C/2O72/CADH1_HUMAN_e3_n2_m40_DIScoresCompared.csv", header = FALSE)
cadh.di.scores.compared
lac.di.scores.compared<- read.csv("/Users/Matt/Documents/Masters_Bioinformatics/Modules/Structural Biology/Assignment 3/Part C/1JWL/LACI_ECOLI_e40_n2_m40_DIScoresCompared.csv", header = FALSE)
lac.di.scores.compared
cadh.di.scores.compared<- read.csv("/Users/Matt/Documents/Masters_Bioinformatics/Modules/Structural Biology/Assignment 3/Part C/2O72/CADH1_HUMAN_e3_n2_m40_DIScoresCompared.csv", header = FALSE)
cadh.di.scores.compared
nrow(lac.di.scores.compared)
laci.table<- data.frame(matrix(NA, ncol = 2, nrow = 19))
number.of.pairs
laci.table<- data.frame(matrix(NA, ncol = 2, nrow = 19))
laci.table
for (i in 1:length(number.of.pairs)) {
pairs<-number.of.pairs[i]
distance<- lac.di.scores.compared[1:pairs,4]
laci.table[i,2]<-sum(distance<= threshold)/pairs
laci.table[i,1]<-pairs
}
laci.table
nrow(cadh.di.scores.compared)
cadh.table<- data.frame(matrix(NA, ncol = 2, nrow = 19))
cadh.table<- data.frame(matrix(NA, ncol = 2, nrow = 19))
cadh.table
for (i in 1:length(number.of.pairs)) {
pairs<-number.of.pairs[i]
distance<- cadh.di.scores.compared[1:pairs,4]
cadh.table[i,2]<-sum(distance<= threshold)/pairs
cadh.table[i,1]<-pairs
}
cadh.table
colour<- rainbow(3, s = 0.6, v = 0.75)
colour<- rainbow(3, s = 0.6, v = 0.75)
plot(question3.table[,1], question3.table[,2], type = "o", pch = 1, xlab = "Number of ranked pairs considered", ylab = "Proportion of contacts accurately predicted", col = colour[1], xlim = c(0,1))
plot(question3.table[,1], question3.table[,2], type = "o", pch = 1, xlab = "Number of ranked pairs considered", ylab = "Proportion of contacts accurately predicted", col = colour[1], ylim = c(0,1))
lines(question3.table[,1], laci.table[,2], type = "o", pch = 1, col = colour[2])
lines(question3.table[,1], cadh.table[,2], type = "o", pch = 1, col = colour[3])
legend("topright",
c("DHFR","LACI","CADH"),
lty=c(1,1), pch=c(1,1),
lwd=c(1,1),col=c(colours),
bty = "n", cex = 1.0)
colour<- rainbow(3, s = 0.6, v = 0.75)
plot(question3.table[,1], question3.table[,2], type = "o", pch = 1, xlab = "Number of ranked pairs considered", ylab = "Proportion of contacts accurately predicted", col = colour[1], ylim = c(0,1))
lines(question3.table[,1], laci.table[,2], type = "o", pch = 1, col = colour[2])
lines(question3.table[,1], cadh.table[,2], type = "o", pch = 1, col = colour[3])
legend("topright",
c("DHFR","LACI","CADH"),
lty=c(1,1), pch=c(1,1),
lwd=c(1,1),col=c(colour),
bty = "n", cex = 1.0)
cadh.di.scores.compared<- read.csv("/Users/Matt/Documents/Masters_Bioinformatics/Modules/Structural Biology/Assignment 3/Part C/2O72/CADH1_HUMAN_e3_n2_m40_DIScoresCompared.csv", header = FALSE)
cadh.di.scores.compared
cadh.table2<- data.frame(matrix(NA, ncol = 2, nrow = 19))
for (i in 1:length(number.of.pairs)) {
pairs<-number.of.pairs[i]
distance<- cadh.di.scores.compared[1:pairs,4]
cadh.table2[i,2]<-sum(distance<= threshold)/pairs
cadh.table2[i,1]<-pairs
}
cadh.table2
plot(question3.table[,1], cadh.table[,2], type = "o", pch = 1, xlab = "Number of ranked pairs considered", ylab = "Proportion of contacts accurately predicted", col = colour[1], ylim = c(0,1))
lines(question3.table[,1], cadh.table2[,2], type = "o", pch = 1, col = colour[2])
lac.di.scores.compared<- read.csv("/Users/Matt/Documents/Masters_Bioinformatics/Modules/Structural Biology/Assignment 3/Part C/1JWL/LACI_ECOLI_e40_n2_m40_DIScoresCompared.csv", header = FALSE)
lac.di.scores.compared
cadh.di.scores.compared<- read.csv("/Users/Matt/Documents/Masters_Bioinformatics/Modules/Structural Biology/Assignment 3/Part C/2O72/CADH1_HUMAN_e3_n2_m40_DIScoresCompared.csv", header = FALSE)
cadh.di.scores.compared
laci.table2<- data.frame(matrix(NA, ncol = 2, nrow = 19))
for (i in 1:length(number.of.pairs)) {
pairs<-number.of.pairs[i]
distance<- lac.di.scores.compared[1:pairs,4]
laci.table2[i,2]<-sum(distance<= threshold)/pairs
laci.table2[i,1]<-pairs
}
laci.table2
cadh.table2<- data.frame(matrix(NA, ncol = 2, nrow = 19))
for (i in 1:length(number.of.pairs)) {
pairs<-number.of.pairs[i]
distance<- cadh.di.scores.compared[1:pairs,4]
cadh.table2[i,2]<-sum(distance<= threshold)/pairs
cadh.table2[i,1]<-pairs
}
cadh.table2
colour<- rainbow(3, s = 0.6, v = 0.75)
plot(question3.table[,1], cadh.table[,2], type = "o", pch = 1, xlab = "Number of ranked pairs considered", ylab = "Proportion of contacts accurately predicted", col = colour[1], ylim = c(0,1))
lines(question3.table[,1], cadh.table2[,2], type = "o", pch = 1, col = colour[2])
plot(question3.table[,1], laci.table[,2], type = "o", pch = 1, xlab = "Number of ranked pairs considered", ylab = "Proportion of contacts accurately predicted", col = colour[1], ylim = c(0,1))
lines(question3.table[,1], laci.table2[,2], type = "o", pch = 1, col = colour[2])
lac.di.scores.compared<- read.csv("/Users/Matt/Documents/Masters_Bioinformatics/Modules/Structural Biology/Assignment 3/Part C/1JWL/LACI_ECOLI_e40_n2_m40_DIScoresCompared.csv", header = FALSE)
lac.di.scores.compared
laci.table3<- data.frame(matrix(NA, ncol = 2, nrow = 19))
for (i in 1:length(number.of.pairs)) {
pairs<-number.of.pairs[i]
distance<- lac.di.scores.compared[1:pairs,4]
laci.table3[i,2]<-sum(distance<= threshold)/pairs
laci.table3[i,1]<-pairs
}
laci.table3
plot(question3.table[,1], laci.table[,2], type = "o", pch = 1, xlab = "Number of ranked pairs considered", ylab = "Proportion of contacts accurately predicted", col = colour[1], ylim = c(0,1))
lines(question3.table[,1], laci.table2[,2], type = "o", pch = 1, col = colour[2])
lines(question3.table[,1], laci.table3[,2], type = "o", pch = 1, col = colour[2])
cadh.di.scores.compared<- read.csv("/Users/Matt/Documents/Masters_Bioinformatics/Modules/Structural Biology/Assignment 3/Part C/2O72/CADH1_HUMAN_e3_n2_m40_DIScoresCompared.csv", header = FALSE)
cadh.di.scores.compared
cadh.table3<- data.frame(matrix(NA, ncol = 2, nrow = 19))
for (i in 1:length(number.of.pairs)) {
pairs<-number.of.pairs[i]
distance<- cadh.di.scores.compared[1:pairs,4]
cadh.table3[i,2]<-sum(distance<= threshold)/pairs
cadh.table3[i,1]<-pairs
}
cadh.table3
plot(question3.table[,1], cadh.table[,2], type = "o", pch = 1, xlab = "Number of ranked pairs considered", ylab = "Proportion of contacts accurately predicted", col = colour[1], ylim = c(0,1))
lines(question3.table[,1], cadh.table3[,2], type = "o", pch = 1, col = colour[3])
?subset
source('~/Documents/Masters_Bioinformatics/Internships/Code/co-deletions/Set up R session.R', echo=TRUE)
CNV.data<-cnv.list
CNV.data[[38]]<- CNV.all.table
length(CNV.data)
cytoband.del.matrix<- function(x,y){
z<- dplyr::full_join(y[,1:8],x, by = "Locus.ID")
cytoband.list<- events.per.cytoband(z, threshold = -1, cytoband_column = 10, column_data_start = 11, chromosome_interval = 0,  deletion = TRUE)
return(cytoband.list[[2]]$proportion.of.deletions)
}
system.time(test3<- lapply(CNV.data, function(x) {cytoband.del.matrix(x, acc.cnv.chr.location)}))
test1[[2]]$proportion.of.deletions
class(cnv.list)
names(threshold_selected_cnv_list_plus_all_loc)
CNV.data<- threshold_selected_cnv_list_plus_all_loc
names(threshold_selected_cnv_list_plus_all_loc)
acc.cnv.chr.location<- threshold_selected_cnv_list_plus_all_loc[[1]]
cytoband.del.matrix<- function(x,y){
z<- dplyr::full_join(y[,1:8],x, by = "Locus.ID")
cytoband.list<- events.per.cytoband(z, threshold = -1, cytoband_column = 10, column_data_start = 11, chromosome_interval = 0,  deletion = TRUE)
return(cytoband.list[[2]]$proportion.of.deletions)
}
system.time(test3<- lapply(CNV.data, function(x) {cytoband.del.matrix(x, acc.cnv.chr.location)}))
colnames(acc.cnv.chr.location)
colnames(acc.cnv.chr.location)[1:11]
system.time(test3<- lapply(CNV.data, function(x) {cytoband.del.matrix(x, acc.cnv.chr.location)}))
test1<- events.per.cytoband(acc.cnv.chr.location, threshold = -1, cytoband_column = 10, column_data_start = 11, chromosome_interval = 0,  deletion = TRUE)
glimpse(test1[[1]])
glimpse(test1[[2]])
glimpse(test1[[3]])
glimpse(test1[[4]])
test2<- events.per.cytoband(acc.cnv.chr.location, threshold = -1, cytoband_column = 10, column_data_start = 11 , select_chromosome = 1, chromosome_interval = 10,  deletion = TRUE)
glimpse(test2[[1]])
glimpse(test2[[2]])
glimpse(test2[[3]])
glimpse(test2[[4]])
test1[[2]]$proportion.of.deletions
my.matrix<- as.matrix(test1[[2]]$proportion.of.deletions)
rownames(my.matrix)<-test1[[2]]$cytoband
colnames(my.matrix)<- "ACC"
annotation_row<- data.frame(chromosome = test1[[2]]$chromosome)
rownames(annotation_row)<- test1[[2]]$cytoband
dim(annotation_row)
annotation_row[,1]<- as.character(annotation_row[,1])
class(annotation_row$chromosome)
pheatmap(my.matrix,
cluster_row = F,
cluster_cols = F,
show_rownames = TRUE,
show_colnames = TRUE,
fontsize_row=1,
cellwidth = 10,
annotation_row = annotation_row,
annotation_legend = FALSE
)
CNV.data<-cnv.list
CNV.data[[38]]<- CNV.all.table
length(CNV.data)
cytoband.del.matrix<- function(x,y){
z<- dplyr::full_join(y[,1:8],x, by = "Locus.ID")
cytoband.list<- events.per.cytoband(z, threshold = -2, cytoband_column = 10, column_data_start = 11, chromosome_interval = 0,  deletion = TRUE)
return(cytoband.list[[2]]$proportion.of.deletions)
}
system.time(test3<- lapply(CNV.data, function(x) {cytoband.del.matrix(x, acc.cnv.chr.location)}))
CNV.data[[1]]
CNV.data<- threshold_selected_cnv_list_plus_all_loc
names(threshold_selected_cnv_list_plus_all_loc)
acc.cnv.chr.location<- threshold_selected_cnv_list_plus_all_loc[[1]]
colnames(acc.cnv.chr.location)[1:11]
cytoband.del.matrix<- function(x,y){
z<- x
cytoband.list<- events.per.cytoband(z, threshold = -2, cytoband_column = 10, column_data_start = 11, chromosome_interval = 0,  deletion = TRUE)
return(cytoband.list[[2]]$proportion.of.deletions)
}
system.time(test3<- lapply(CNV.data, function(x) {cytoband.del.matrix(x, acc.cnv.chr.location)}))
test4<- do.call(cbind, test3) %>%as.matrix
rownames(test4)<- test1[[2]]$cytoband
colnames(test4)<- names(CNV.data)
annotation_row<- data.frame(chromosome = test1[[2]]$chromosome)
rownames(annotation_row)<- test1[[2]]$cytoband
dim(annotation_row)
head(annotation_row)
col.pal<- colorRampPalette(c( "white","navy", "firebrick3"))(1000)
pheatmap(test4,
cluster_row = F,
cluster_cols = F,
show_rownames = TRUE,
show_colnames = TRUE,
color = col.pal,
fontsize_row=1,
#cellwidth = 10,
annotation_row = annotation_row,
annotation_legend = FALSE
)
CNV.data<- threshold_selected_cnv_list_plus_all_loc
names(threshold_selected_cnv_list_plus_all_loc)
acc.cnv.chr.location<- threshold_selected_cnv_list_plus_all_loc[[1]]
colnames(acc.cnv.chr.location)[1:11]
CNV.data<- threshold_selected_cnv_list_plus_all_loc
names(threshold_selected_cnv_list_plus_all_loc)
acc.cnv.chr.location<- threshold_selected_cnv_list_plus_all_loc[[1]]
colnames(acc.cnv.chr.location)[1:11]
cytoband.del.matrix<- function(x,y){
z<- x
cytoband.list<- events.per.cytoband(z, threshold = 2, cytoband_column = 10, column_data_start = 11, chromosome_interval = 0,  deletion = FALSE)
return(cytoband.list[[2]]$proportion.of.deletions)
}
system.time(test3<- lapply(CNV.data, function(x) {cytoband.del.matrix(x, acc.cnv.chr.location)}))
test4<- do.call(cbind, test3) %>%as.matrix
rownames(test4)<- test1[[2]]$cytoband
colnames(test4)<- names(CNV.data)
annotation_row<- data.frame(chromosome = test1[[2]]$chromosome)
rownames(annotation_row)<- test1[[2]]$cytoband
dim(annotation_row)
head(annotation_row)
col.pal<- colorRampPalette(c( "white","navy", "firebrick3"))(1000)
pheatmap(test4,
cluster_row = F,
cluster_cols = F,
show_rownames = TRUE,
show_colnames = TRUE,
color = col.pal,
fontsize_row=1,
#cellwidth = 10,
annotation_row = annotation_row,
annotation_legend = FALSE
)
chromosome_interval_1MB<- ceiling(test2[[3]]$intervals_for_Mb)
chromosome_interval_1MB
x<- chromosomal_location(CNV.all.table)
dim(x)
heatmap.matrix.chr.interval250<- data.frame(matrix(NA, ncol = 1, nrow = 2500))
dim(heatmap.matrix.chr.interval250)
heatmap.matrix.chr.interval250[,1]<-seq(1:2500)
colnames(heatmap.matrix.chr.interval250)<-c("intervals")
colnames(heatmap.matrix.chr.interval250)
chr<-c(seq(1:22), "X")
chr
i=1
j<-chr[i]
chromosome_interval_1MB
chromosome_interval<-chromosome_interval_1MB[i]
cytoband.list<- events.per.cytoband(x, threshold = -1, cytoband_column = 10, column_data_start = 11, select_chromosome = j , chromosome_interval = chromosome_interval,  deletion = TRUE)
y<-data.frame(intervals = seq(1:length(cytoband.list[[4]]$proportion.of.deletions)), chr = cytoband.list[[4]]$proportion.of.deletions)
dim(y)
head(y)
heatmap.matrix.chr.interval250<- full_join(heatmap.matrix.chr.interval250, y, by = "intervals")
print(i)
print(length(cytoband.list[[4]]$proportion.of.deletions))
acc.cnv.chr.location
test2<- events.per.cytoband(acc.cnv.chr.location, threshold = -1, cytoband_column = 10, column_data_start = 11 , select_chromosome = 1, chromosome_interval = 10,  deletion = TRUE)
chromosome_interval_1MB<- ceiling(test2[[3]]$intervals_for_Mb)
chromosome_interval_1MB
test2[[3]]
chromosome_interval_1MB<- ceiling(test2[[3]]$intervals_for_Mb)
chromosome_interval_1MB
dim(x)
x<- threshold_CNV_all_table_loc
dim(x)
names(threshold_selected_cnv_list_plus_all_loc)
x<- threshold_selected_cnv_list_plus_all_loc[[33]]
dim(x)
heatmap.matrix.chr.interval250<- data.frame(matrix(NA, ncol = 1, nrow = 2500))
dim(heatmap.matrix.chr.interval250)
heatmap.matrix.chr.interval250[,1]<-seq(1:2500)
colnames(heatmap.matrix.chr.interval250)<-c("intervals")
colnames(heatmap.matrix.chr.interval250)
chr<-c(seq(1:22), "X")
chr
for (i in 1:23) {
j<-chr[i]
chromosome_interval<-chromosome_interval_1MB[i]
cytoband.list<- events.per.cytoband(x, threshold = -1, cytoband_column = 10, column_data_start = 11, select_chromosome = j , chromosome_interval = chromosome_interval,  deletion = TRUE)
y<-data.frame(intervals = seq(1:length(cytoband.list[[4]]$proportion.of.deletions)), chr = cytoband.list[[4]]$proportion.of.deletions)
# glimpse(cytoband.list[[1]])
# glimpse(cytoband.list[[2]])
# glimpse(cytoband.list[[3]])
# glimpse(cytoband.list[[4]])
heatmap.matrix.chr.interval250<- full_join(heatmap.matrix.chr.interval250, y, by = "intervals")
# heatmap.matrix.chr.interval250[,i]<- cytoband.list[[4]][,5]
print(i)
print(length(cytoband.list[[4]]$proportion.of.deletions))
}
chromosome_interval_1MB<- ceiling(test2[[3]]$intervals_for_Mb)
chromosome_interval_1MB
head(y)
chromosome_interval_1MB<- ceiling(test2[[3]]$intervals_for_Mb)
chromosome_interval_1MB
names(threshold_selected_cnv_list_plus_all_loc)
x<- threshold_selected_cnv_list_plus_all_loc[[33]]
dim(x)
heatmap.matrix.chr.interval250<- data.frame(matrix(NA, ncol = 1, nrow = 2500))
dim(heatmap.matrix.chr.interval250)
heatmap.matrix.chr.interval250[,1]<-seq(1:2500)
colnames(heatmap.matrix.chr.interval250)<-c("intervals")
colnames(heatmap.matrix.chr.interval250)
chr<-c(seq(1:22), "X")
chr
for (i in 1:23) {
j<-chr[i]
chromosome_interval<-chromosome_interval_1MB[i]
cytoband.list<- events.per.cytoband(x, threshold = -1, cytoband_column = 10, column_data_start = 11, select_chromosome = j , chromosome_interval = chromosome_interval,  deletion = TRUE)
y<-data.frame(intervals = seq(1:length(cytoband.list[[4]]$proportion.of.deletions)), chr = cytoband.list[[4]]$proportion.of.deletions)
# glimpse(cytoband.list[[1]])
# glimpse(cytoband.list[[2]])
# glimpse(cytoband.list[[3]])
# glimpse(cytoband.list[[4]])
heatmap.matrix.chr.interval250<- full_join(heatmap.matrix.chr.interval250, y, by = "intervals")
# heatmap.matrix.chr.interval250[,i]<- cytoband.list[[4]][,5]
print(i)
print(length(cytoband.list[[4]]$proportion.of.deletions))
}
colnames(heatmap.matrix.chr.interval250)<- c("Interval", paste0("Chromosome ", seq(1:22)), "Chromosome X")
head(heatmap.matrix.chr.interval250)
ncol(heatmap.matrix.chr.interval250)
col.pal<- colorRampPalette(c( "white","navy", "firebrick3"))(1000)
pheatmap(heatmap.matrix.chr.interval250[1:205,2:24],
cluster_row = F,
cluster_cols = F,
show_rownames = FALSE,
show_colnames = TRUE,
color = col.pal,
fontsize_row=1
#cellwidth = 10,
#annotation_row = annotation_row,
#annotation_legend = FALSE
)
chromosome_interval_1MB<- ceiling(test2[[3]]$intervals_for_Mb)
chromosome_interval_1MB
names(threshold_selected_cnv_list_plus_all_loc)
x<- threshold_selected_cnv_list_plus_all_loc[[33]]
dim(x)
heatmap.matrix.chr.interval250<- data.frame(matrix(NA, ncol = 1, nrow = 2500))
dim(heatmap.matrix.chr.interval250)
heatmap.matrix.chr.interval250[,1]<-seq(1:2500)
colnames(heatmap.matrix.chr.interval250)<-c("intervals")
colnames(heatmap.matrix.chr.interval250)
chr<-c(seq(1:22), "X")
chr
names(threshold_selected_cnv_list_plus_all_loc[33])
for (i in 1:23) {
j<-chr[i]
chromosome_interval<-chromosome_interval_1MB[i]
cytoband.list<- events.per.cytoband(x, threshold = -2, cytoband_column = 10, column_data_start = 11, select_chromosome = j , chromosome_interval = chromosome_interval,  deletion = TRUE)
y<-data.frame(intervals = seq(1:length(cytoband.list[[4]]$proportion.of.deletions)), chr = cytoband.list[[4]]$proportion.of.deletions)
# glimpse(cytoband.list[[1]])
# glimpse(cytoband.list[[2]])
# glimpse(cytoband.list[[3]])
# glimpse(cytoband.list[[4]])
heatmap.matrix.chr.interval250<- full_join(heatmap.matrix.chr.interval250, y, by = "intervals")
# heatmap.matrix.chr.interval250[,i]<- cytoband.list[[4]][,5]
print(i)
print(length(cytoband.list[[4]]$proportion.of.deletions))
}
colnames(heatmap.matrix.chr.interval250)<- c("Interval", paste0("Chromosome ", seq(1:22)), "Chromosome X")
head(heatmap.matrix.chr.interval250)
ncol(heatmap.matrix.chr.interval250)
col.pal<- colorRampPalette(c( "white","navy", "firebrick3"))(1000)
pheatmap(heatmap.matrix.chr.interval250[1:205,2:24],
cluster_row = F,
cluster_cols = F,
show_rownames = FALSE,
show_colnames = TRUE,
color = col.pal,
fontsize_row=1
#cellwidth = 10,
#annotation_row = annotation_row,
#annotation_legend = FALSE
)
heatmap_deletion_chromosome9<- co.deletion_co.amplification_matrix(threshold_selected_cnv_list_plus_all_loc[[33]], column_start = 11, threshold = -2,Chromosome = 9,
deletion = TRUE, normalisation = "total.tumour.number")
chromosome<- "9"
plot_data<- heatmap_deletion_chromosome9
tiff(paste("Chromosome_", chromosome, "_deletion = true.tiff", sep =""), width = 25, height = 22, units = 'in', res = 100)
pheatmap(plot_data,
cluster_row = F,
cluster_cols = F,
show_rownames = FALSE,
show_colnames = FALSE
)
dev.off()
heatmap_amplification_chromosome9<- co.deletion_co.amplification_matrix(threshold_selected_cnv_list_plus_all_loc[[33]], column_start = 11, threshold = 2,Chromosome = 9,
deletion = FALSE, normalisation = "total.tumour.number")
chromosome<- "9"
plot_data<- heatmap_amplification_chromosome9
chromosome<- "9"
plot_data<- heatmap_amplification_chromosome9
tiff(paste("Chromosome_", chromosome, "_deletion = true.tiff", sep =""), width = 13, height = 11, units = 'in', res = 100)
pheatmap(plot_data,
cluster_row = F,
cluster_cols = F,
show_rownames = FALSE,
show_colnames = FALSE
)
dev.off()
chromosome<- "9"
plot_data<- heatmap_deletion_chromosome9
tiff(paste("Chromosome_", chromosome, "_deletion = true.tiff", sep =""), width = 13, height = 11, units = 'in', res = 100)
pheatmap(plot_data,
cluster_row = F,
cluster_cols = F,
show_rownames = FALSE,
show_colnames = FALSE
)
dev.off()
i=1
cnv_table<- threshold_selected_cnv_list_plus_all_loc[[i]]
codeletion_matrix<- co.deletion_co.amplification_matrix(threshold_selected_cnv_list_plus_all_loc[[1]], column_start = 11, threshold = 2,
deletion = FALSE, normalisation = "total.tumour.number")
dim(codeletion_matrix)
codeletion_matrix[1:10, 1:10]
gene_names<- colnames(codeletion_matrix)
j=1
row_of_table<-codeletion_matrix[j,]
row_of_table[2]
row_of_table[1:2]
dim(row_of_table)
cbind(rep(gene_names[j],nrow(codeletion_matrix)), gene_names, row_of_table)
cbind(gene1 = rep(gene_names[j],nrow(codeletion_matrix)), gene2 = gene_names, prop_codeletion = row_of_table)
results<- data.frame(matrix(ncol = 3, nrow = NA))
results<- data.frame(matrix(NA, ncol = 3, nrow = 1))
results
codeletion_table<- data.frame(matrix(NA, ncol = 3, nrow = 1))
codeletion_table
j=1
row_of_table<-codeletion_matrix[j,]
codeletion_temp_table<- cbind(gene1 = rep(gene_names[j],nrow(codeletion_matrix)), gene2 = gene_names, prop_codeletion = row_of_table)
codeletion_table<-rbind(codeletion_table, codeletion_temp_table)
codeletion_table<- data.frame(matrix(NA, ncol = 3, nrow = 1))
colnames(codeletion_table)<- c("gene1", "gene2", "prop_codeletion")
gene_names<- colnames(codeletion_matrix)
row_of_table<-codeletion_matrix[j,]
codeletion_temp_table<- cbind(gene1 = rep(gene_names[j],nrow(codeletion_matrix)), gene2 = gene_names, prop_codeletion = row_of_table)
codeletion_table<-rbind(codeletion_table, codeletion_temp_table)
codeletion_table
codeletion_table<- codeletion_table[-1,]
head(codeletion_table)
codeletion_table<- data.frame(matrix(NA, ncol = 3, nrow = 1))
colnames(codeletion_table)<- c("gene1", "gene2", "prop_codeletion")
gene_names<- colnames(codeletion_matrix)
for (j in 1: nrow(codeletion_matrix)){
row_of_table<-codeletion_matrix[j,]
codeletion_temp_table<- cbind(gene1 = rep(gene_names[j],nrow(codeletion_matrix)), gene2 = gene_names, prop_codeletion = row_of_table)
codeletion_table<-rbind(codeletion_table, codeletion_temp_table)
}
dim(codeletion_table)
j
?tidyr::gather
rownames(codeletion_matrix)
length(rownames(codeletion_matrix))
head(codeletion_matrix)
codeletion_matrix[1:10, 1:10]
codeletion_per_target_gene<- as.data.frame(cbind(Gene.Symbol.row = rownames(codeletion_matrix), codeletion_matrix))
codeletion_per_target_gene[1:10, 1:10]
i=1
cnv_table<- threshold_selected_cnv_list_plus_all_loc[[i]]
codeletion_matrix<- co.deletion_co.amplification_matrix(threshold_selected_cnv_list_plus_all_loc[[1]], column_start = 11, threshold = 2,
deletion = FALSE, normalisation = "total.tumour.number")
dim(codeletion_matrix)
codeletion_matrix[1:10, 1:10]
codeletion_matrix[1:10, 1:10]
codeletion_per_target_gene<- as.data.frame(cbind(Gene.Symbol.row = rownames(codeletion_matrix), codeletion_matrix))
codeletion_per_target_gene[1:10, 1:10]
cbind(1:1000000, 1:1000000, 1:1000000, 1:1000000, 1:1000000)
codeletion_per_target_gene[1:10, 1:10]
gathered<- tidyr::gather(codeletion_matrix, Gene.Symbol.col,proportion, 2:ncol(codeletion_matrix))
gathered<- tidyr::gather(codeletion_per_target_gene, Gene.Symbol.col,proportion, 2:ncol(codeletion_matrix))
head(gathered)
rownames(codeletion_matrix)
grep(IL9R|ENSG00000124334.12,rownames(codeletion_matrix))
grep("IL9R|ENSG00000124334.12",rownames(codeletion_matrix))
ncol(codeletion_matrix)
gathered<- tidyr::gather(codeletion_per_target_gene, Gene.Symbol.col,proportion, 2:ncol(codeletion_matrix))
head(gathered)
