## Add extra column with patient ID:
# deletion_category_target_gene<-deletion_category_target_gene_list[[2]]
# survival_time_list<- clinical_survival_list[[1]]
#
# join_clinical_deletion_category_table(deletion_category_target_gene = deletion_category_target_gene, survival_time_list = survival_time_list)
deletion_category_survival_target_gene_list<- lapply(deletion_category_target_gene_list, function(x) join_clinical_deletion_category_table(x, survival_time_list))
# deletion_category_survival_target_gene_list[[1]][1:3, 1:12]
#########################From here!
return(deletion_category_survival_target_gene_list)
}
test_function<- survival_analysis_of_gene_list(target_gene_list, survival_time_list, cnv.table, distance = 2.5e+06, threshold = -2, deletion = TRUE, column_start = 11, start = TRUE, remove_NA = TRUE, Cytoband = FALSE)
length(test_function)
test_function<- survival_analysis_of_gene_list(target_gene_list, survival_time_list, cnv.table, distance = 2.5e+06, threshold = -2, deletion = TRUE, column_start = 11, time_of_death_column = 5, death_event_column = 6, start = TRUE, remove_NA = TRUE, Cytoband = FALSE)
survival_analysis_of_gene_list<- function(target_gene_list, survival_time_list, cnv.table, distance = 2.5e+06,
threshold = -2, deletion = TRUE, time_of_death_column, death_event_column, column_start = 11, start = TRUE, remove_NA = TRUE, Cytoband = FALSE){
##########
###Create a list of tables were each table contains deletion categories(1-4) for each tumour(columns) per
#gene(rows) surrounding an interval around a target gene.
deletion_category_target_gene_list <- lapply(target_gene_list, function(x) categorise_deletion_type_around_target_gene(cnv.table = cnv.table, target_gene = x[[1]], Chromosome = x[[2]],
selection_criteria = c(x[[4]] - distance, x[[5]]+ distance), threshold = threshold, deletion = deletion, column_start = column_start, start = start, remove_NA = remove_NA, Cytoband = Cytoband))
# deletion_category_target_gene_list[[1]][,1:3]
# deletion_category_target_gene_list[[2]][,1:3]
########
### Take a deletion category table for a target gene and join to survival table
## Add extra column with patient ID:
# deletion_category_target_gene<-deletion_category_target_gene_list[[2]]
# survival_time_list<- clinical_survival_list[[1]]
#
# join_clinical_deletion_category_table(deletion_category_target_gene = deletion_category_target_gene, survival_time_list = survival_time_list)
deletion_category_survival_target_gene_list<- lapply(deletion_category_target_gene_list, function(x) join_clinical_deletion_category_table(x, survival_time_list, time_of_death_column = time_of_death_column, death_event_column = death_event_column))
# deletion_category_survival_target_gene_list[[1]][1:3, 1:12]
#########################From here!
return(deletion_category_survival_target_gene_list)
}
test_function<- survival_analysis_of_gene_list(target_gene_list, survival_time_list, cnv.table, distance = 2.5e+06, threshold = -2, deletion = TRUE, column_start = 11, time_of_death_column = 5, death_event_column = 6, start = TRUE, remove_NA = TRUE, Cytoband = FALSE)
length(test_function)
test_function[[1]]
dim(test_function[[1]])
dim(test_function[[2]])
deletion_category_survival_target_gene<- test_function[[2]]
ncol(deletion_category_survival_target_gene)
colnames(deletion_category_survival_target_gene[1:2])
colnames(deletion_category_survival_target_gene[1:2])<- c("death_time", "death_event")
colnames(deletion_category_survival_target_gene[1:2])
colnames(deletion_category_survival_target_gene[1:2])<- c("death_time", "death_event")
colnames(deletion_category_survival_target_gene[1:2])
colnames(deletion_category_survival_target_gene[1])
colnames(deletion_category_survival_target_gene[2])
surv_object<- with(deletion_category_survival_target_gene, Surv(colnames(deletion_category_survival_target_gene[1]), colnames(deletion_category_survival_target_gene[2])==1))
class(deletion_category_survival_target_gene[,1])
death_time<- deletion_category_survival_target_gene[,1]
death_time
death_event<- deletion_category_survival_target_gene[,2]
death_event
surv_object<- Surv(death_time, death_event==1)
surv_object
deletion_category_survival_target_gene<- test_function[[2]]
death_time<- deletion_category_survival_target_gene[,1]
death_event<- deletion_category_survival_target_gene[,2]
surv_object<- Surv(death_time, death_event==1)
nrow = ncol(deletion_category_survival_target_gene)-2
ncol(deletion_category_survival_target_gene)-2
rm(nrow)
nrow(as)
survival_stats_table<- data.frame(as.matrix(NA, ncol = 8, nrow = ncol(deletion_category_survival_target_gene)-2))
1:nrow(survival_stats_table)
ncol(deletion_category_survival_target_gene)-2
survival_stats_table<- data.frame(as.matrix(NA, ncol = 8, nrow = ncol(deletion_category_survival_target_gene)-2))
survival_stats_table
as.matrix(NA, ncol = 8, nrow = ncol(deletion_category_survival_target_gene) -2)
survival_stats_table<- as.data.frame(as.matrix(NA, ncol = 8, nrow = ncol(deletion_category_survival_target_gene) -2))
survival_stats_table
survival_stats_table<- as.data.frame(matrix(NA, ncol = 8, nrow = ncol(deletion_category_survival_target_gene) -2))
survival_stats_table
survival_stats_table<- data.frame(matrix(NA, ncol = 8, nrow = ncol(deletion_category_survival_target_gene) -2))
survival_stats_table
1:nrow(survival_stats_table)
i=1
deletion_category_survival_target_gene[i+2]
fittedSurv <- survfit(surv_object~deletion_category_survival_target_gene[i+2], na.action = na.exclude)
covariable_object<- deletion_category_survival_target_gene[i+2]
covariable_object
fittedSurv <- survfit(surv_object~covariable_object, na.action = na.exclude)
covariable_object<- as.vector(deletion_category_survival_target_gene[i+2])
fittedSurv <- survfit(surv_object~covariable_object, na.action = na.exclude)
clinical_survival_deletion_category
covariable_object<- deletion_category_survival_target_gene$SLC24A2
fittedSurv <- survfit(surv_object~covariable_object, na.action = na.exclude)
class(covariable_object)
covariable_object<- as.vector(deletion_category_survival_target_gene[i+2])
class(covariable_object)
covariable_object<- as.numeric(deletion_category_survival_target_gene[i+2])
covariable_object<- as.integer(deletion_category_survival_target_gene[i+2])
covariable_object<- as.factor(deletion_category_survival_target_gene[i+2])
covariable_object<- as.numeric(as.character(deletion_category_survival_target_gene[i+2]))
covariable_object
as.character(deletion_category_survival_target_gene[i+2])
covariable_object<- deletion_category_survival_target_gene[,i+2]
covariable_object
fittedSurv <- survfit(surv_object~covariable_object, na.action = na.exclude)
covariable_object<- deletion_category_survival_target_gene[,i+2]
fittedSurv <- survfit(surv_object~covariable_object, na.action = na.exclude)
fittedSurv_mean<- survival:::survmean(fittedSurv, rmean="individual")
df.categ <- cbind(sapply(names(fittedSurv$strata), function(x) strsplit(x,"=")[[1]][2]),
fittedSurv$n)
df.categ <- data.frame(df.categ)
df.categ
deletion_category_survival_target_gene
i=1
survival_stats<- rep(NA, 8)
covariable_object<- deletion_category_survival_target_gene[,i+2]
fittedSurv <- survfit(surv_object~covariable_object, na.action = na.exclude)
fittedSurv_mean<- survival:::survmean(fittedSurv, rmean="individual")
df.categ <- cbind(sapply(names(fittedSurv$strata), function(x) strsplit(x,"=")[[1]][2]),
fittedSurv$n)
df.categ <- data.frame(df.categ)
fittedSurv <- survfit(surv_object~covariable_object, na.action = na.exclude)
fittedSurv_mean<- survival:::survmean(fittedSurv, rmean="individual")
df.categ <- cbind(sapply(names(fittedSurv$strata), function(x) strsplit(x,"=")[[1]][2]),
fittedSurv$n)
df.categ <- data.frame(df.categ)
categNames <- apply(df.categ, 1, function(x) paste0(x[1]," (",x[2],")"))
categNames
print("Chi-sq test:")
print(survdiff(surv~dfCov,rho = 0))
print(survdiff(surv_object~covariable_object,rho = 0))
print(summary(coxph(surv_object~covariable_object)))
coxfit <- coxph(surv_object~covariable_object)
target_gene
proximal_gene
colnames(deletion_category_survival_target_gene[i+2])
survival_stats[1]<- target_gene
survival_stats[2]<- colnames(deletion_category_survival_target_gene[i+2])
survival_stats[3]<- round(summary(coxfit)$logtest[3],2)
survival_stats[4]<- round(summary(coxfit)$waldtest[3],2)
survival_stats[5]<- round(summary(coxfit)$sctest[3],2)
survival_stats[6]<- round(summary(coxfit)$coefficients[2],2)
survival_stats[7]<- paste(fittedSurv_mean$matrix[,5], collapse = " ") #mean
survival_stats[8]<-  paste(fittedSurv_mean$matrix[,3], collapse = " ")
names(survival_stats)<-c("target_gene", "proximal_gene", "p-value_Likelihood_ratio_test",
"p-value_Wald_test", "p-value_logrank_test", "Hazard_ratio", "mean_survival",
"number_of_samples_per_category")
survival_stats
fittedSurv_mean$matrix[,3]
fittedSurv_mean$matrix
rownames(fittedSurv_mean$matrix)
survival_stats[1]<- target_gene
survival_stats[2]<- colnames(deletion_category_survival_target_gene[i+2])
survival_stats[3]<- round(summary(coxfit)$logtest[3],2)
survival_stats[4]<- round(summary(coxfit)$waldtest[3],2)
survival_stats[5]<- round(summary(coxfit)$sctest[3],2)
survival_stats[6]<- round(summary(coxfit)$coefficients[2],2)
survival_stats[7]<- paste(rownames(fittedSurv_mean$matrix), collapse = " ") #categories
survival_stats[8]<- paste(fittedSurv_mean$matrix[,5], collapse = " ") #mean
survival_stats[9]<-  paste(fittedSurv_mean$matrix[,3], collapse = " ") #number of samples
survival_stats
i
survival_stats_table[i, 1]<- target_gene
survival_stats_table[i, 2]<- colnames(deletion_category_survival_target_gene[i+2])
survival_stats_table[i, 3]<- round(summary(coxfit)$logtest[3],2)
survival_stats_table[i, 4]<- round(summary(coxfit)$waldtest[3],2)
survival_stats_table[i, 5]<- round(summary(coxfit)$sctest[3],2)
survival_stats_table[i, 6]<- round(summary(coxfit)$coefficients[2],2)
survival_stats_table[i, 7]<- paste(rownames(fittedSurv_mean$matrix), collapse = " ") #categories
survival_stats_table[i, 8]<- paste(fittedSurv_mean$matrix[,5], collapse = " ") #mean
survival_stats_table[i, 9]<-  paste(fittedSurv_mean$matrix[,3], collapse = " ") #number of samples
names(survival_stats)<-c("target_gene", "proximal_gene", "p-value_Likelihood_ratio_test",
"p-value_Wald_test", "p-value_logrank_test", "Hazard_ratio", "mean_survival",
"number_of_samples_per_category")
survival_stats
names(survival_stats_table)<-c("target_gene", "proximal_gene", "p-value_Likelihood_ratio_test",
"p-value_Wald_test", "p-value_logrank_test", "Hazard_ratio", "mean_survival",
"number_of_samples_per_category")
survival_stats_table
i=2
covariable_object<- deletion_category_survival_target_gene[,i+2]
fittedSurv <- survfit(surv_object~covariable_object, na.action = na.exclude)
fittedSurv_mean<- survival:::survmean(fittedSurv, rmean="individual")
df.categ <- cbind(sapply(names(fittedSurv$strata), function(x) strsplit(x,"=")[[1]][2]),
fittedSurv$n)
df.categ <- data.frame(df.categ)
categNames <- apply(df.categ, 1, function(x) paste0(x[1]," (",x[2],")"))
print("Chi-sq test:")
print(survdiff(surv_object~covariable_object,rho = 0))
print("Cox PH test:")
print(summary(coxph(surv_object~covariable_object)))
coxfit <- coxph(surv_object~covariable_object)
survival_stats_table[i, 1]<- target_gene
survival_stats_table[i, 2]<- colnames(deletion_category_survival_target_gene[i+2])
survival_stats_table[i, 3]<- round(summary(coxfit)$logtest[3],2)
survival_stats_table[i, 4]<- round(summary(coxfit)$waldtest[3],2)
survival_stats_table[i, 5]<- round(summary(coxfit)$sctest[3],2)
survival_stats_table[i, 6]<- round(summary(coxfit)$coefficients[2],2)
survival_stats_table[i, 7]<- paste(rownames(fittedSurv_mean$matrix), collapse = " ") #categories
survival_stats_table[i, 8]<- paste(fittedSurv_mean$matrix[,5], collapse = " ") #mean
survival_stats_table[i, 9]<-  paste(fittedSurv_mean$matrix[,3], collapse = " ") #number of samples
survival_stats_table
survival_statistics<- function(deletion_category_survival_target_gene, print_to_screen = print_to_screen, plot_graph = plot_graph){
death_time<- deletion_category_survival_target_gene[,1]
death_event<- deletion_category_survival_target_gene[,2]
##Create Surv object
surv_object<- Surv(death_time, death_event==1)
##Create empty table to store stats:
survival_stats_table<- data.frame(matrix(NA, ncol = 9, nrow = ncol(deletion_category_survival_target_gene) -2))
names(survival_stats_table)<-c("target_gene", "proximal_gene", "p-value_Likelihood_ratio_test",
"p-value_Wald_test", "p-value_logrank_test", "Hazard_ratio", "mean_survival",
"number_of_samples_per_category")
for (i in 1:nrow(survival_stats_table)){
##Get covariable object for survfit:
covariable_object<- deletion_category_survival_target_gene[,i+2]
##Fit Kaplain meier graph to one co-variable to compare data with :
fittedSurv <- survfit(surv_object~covariable_object, na.action = na.exclude)
fittedSurv_mean<- survival:::survmean(fittedSurv, rmean="individual")
#survival:::survmean(fittedSurv, rmean="common")
df.categ <- cbind(sapply(names(fittedSurv$strata), function(x) strsplit(x,"=")[[1]][2]),
fittedSurv$n)
df.categ <- data.frame(df.categ)
##Get category names for one variable
categNames <- apply(df.categ, 1, function(x) paste0(x[1]," (",x[2],")"))
# if (plot_graph == TRUE) {
#   plot(fittedSurv, main=plotTitle,
#        xlab="Time (days)", ylab=ylabel,
#        col=brewer.pal(9,"Set1"), mark.time=T)
#   legend("topright", legend=categNames,
#          col=brewer.pal(9,"Set1"),
#          lwd=2, cex=0.9)
# }
if(print_to_screen == TRUE) {
print("Chi-sq test:")
print(survdiff(surv_object~covariable_object,rho = 0))
print("Cox PH test:")
print(summary(coxph(surv_object~covariable_object)))
}
coxfit <- coxph(surv_object~covariable_object)
# if (plot_graph == TRUE) {
#   text(1000,0,labels=paste0("HR=",round(exp(summary(coxfit)$coefficients[1]),2),"; p=",
#                             round(summary(coxfit)$logtest[3],3)))
# }
survival_stats_table[i, 1]<- target_gene
survival_stats_table[i, 2]<- colnames(deletion_category_survival_target_gene[i+2])
survival_stats_table[i, 3]<- round(summary(coxfit)$logtest[3],2)
survival_stats_table[i, 4]<- round(summary(coxfit)$waldtest[3],2)
survival_stats_table[i, 5]<- round(summary(coxfit)$sctest[3],2)
survival_stats_table[i, 6]<- round(summary(coxfit)$coefficients[2],2)
survival_stats_table[i, 7]<- paste(rownames(fittedSurv_mean$matrix), collapse = " ") #categories
survival_stats_table[i, 8]<- paste(fittedSurv_mean$matrix[,5], collapse = " ") #mean
survival_stats_table[i, 9]<-  paste(fittedSurv_mean$matrix[,3], collapse = " ") #number of samples
}
return(survival_stats_table)
}
print_to_screen = FALSE
plot_graph = FALSE
test_stats<- survival_statistics(deletion_category_survival_target_gene, print_to_screen = print_to_screen, plot_graph = plot_graph)
test_stats
survival_statistics<- function(deletion_category_survival_target_gene, print_to_screen = print_to_screen, plot_graph = plot_graph){
death_time<- deletion_category_survival_target_gene[,1]
death_event<- deletion_category_survival_target_gene[,2]
##Create Surv object
surv_object<- Surv(death_time, death_event==1)
##Create empty table to store stats:
survival_stats_table<- data.frame(matrix(NA, ncol = 9, nrow = ncol(deletion_category_survival_target_gene) -2))
names(survival_stats_table)<-c("target_gene", "proximal_gene", "p-value_Likelihood_ratio_test",
"p-value_Wald_test", "p-value_logrank_test", "Hazard_ratio", "Categories"
"mean_survival", "number_of_samples_per_category")
for (i in 1:nrow(survival_stats_table)){
##Get covariable object for survfit:
covariable_object<- deletion_category_survival_target_gene[,i+2]
##Fit Kaplain meier graph to one co-variable to compare data with :
fittedSurv <- survfit(surv_object~covariable_object, na.action = na.exclude)
fittedSurv_mean<- survival:::survmean(fittedSurv, rmean="individual")
#survival:::survmean(fittedSurv, rmean="common")
df.categ <- cbind(sapply(names(fittedSurv$strata), function(x) strsplit(x,"=")[[1]][2]),
fittedSurv$n)
df.categ <- data.frame(df.categ)
##Get category names for one variable
categNames <- apply(df.categ, 1, function(x) paste0(x[1]," (",x[2],")"))
# if (plot_graph == TRUE) {
#   plot(fittedSurv, main=plotTitle,
#        xlab="Time (days)", ylab=ylabel,
#        col=brewer.pal(9,"Set1"), mark.time=T)
#   legend("topright", legend=categNames,
#          col=brewer.pal(9,"Set1"),
#          lwd=2, cex=0.9)
# }
if(print_to_screen == TRUE) {
print("Chi-sq test:")
print(survdiff(surv_object~covariable_object,rho = 0))
print("Cox PH test:")
print(summary(coxph(surv_object~covariable_object)))
}
coxfit <- coxph(surv_object~covariable_object)
# if (plot_graph == TRUE) {
#   text(1000,0,labels=paste0("HR=",round(exp(summary(coxfit)$coefficients[1]),2),"; p=",
#                             round(summary(coxfit)$logtest[3],3)))
# }
survival_stats_table[i, 1]<- target_gene
survival_stats_table[i, 2]<- colnames(deletion_category_survival_target_gene[i+2])
survival_stats_table[i, 3]<- round(summary(coxfit)$logtest[3],2)
survival_stats_table[i, 4]<- round(summary(coxfit)$waldtest[3],2)
survival_stats_table[i, 5]<- round(summary(coxfit)$sctest[3],2)
survival_stats_table[i, 6]<- round(summary(coxfit)$coefficients[2],2)
survival_stats_table[i, 7]<- paste(rownames(fittedSurv_mean$matrix), collapse = " ") #categories
survival_stats_table[i, 8]<- paste(fittedSurv_mean$matrix[,5], collapse = " ") #mean
survival_stats_table[i, 9]<-  paste(fittedSurv_mean$matrix[,3], collapse = " ") #number of samples
}
return(survival_stats_table)
}
survival_statistics<- function(deletion_category_survival_target_gene, print_to_screen = print_to_screen, plot_graph = plot_graph){
death_time<- deletion_category_survival_target_gene[,1]
death_event<- deletion_category_survival_target_gene[,2]
##Create Surv object
surv_object<- Surv(death_time, death_event==1)
##Create empty table to store stats:
survival_stats_table<- data.frame(matrix(NA, ncol = 9, nrow = ncol(deletion_category_survival_target_gene) -2))
names(survival_stats_table)<-c("target_gene", "proximal_gene", "p-value_Likelihood_ratio_test",
"p-value_Wald_test", "p-value_logrank_test", "Hazard_ratio", "Categories",
"mean_survival", "number_of_samples_per_category")
for (i in 1:nrow(survival_stats_table)){
##Get covariable object for survfit:
covariable_object<- deletion_category_survival_target_gene[,i+2]
##Fit Kaplain meier graph to one co-variable to compare data with :
fittedSurv <- survfit(surv_object~covariable_object, na.action = na.exclude)
fittedSurv_mean<- survival:::survmean(fittedSurv, rmean="individual")
#survival:::survmean(fittedSurv, rmean="common")
df.categ <- cbind(sapply(names(fittedSurv$strata), function(x) strsplit(x,"=")[[1]][2]),
fittedSurv$n)
df.categ <- data.frame(df.categ)
##Get category names for one variable
categNames <- apply(df.categ, 1, function(x) paste0(x[1]," (",x[2],")"))
# if (plot_graph == TRUE) {
#   plot(fittedSurv, main=plotTitle,
#        xlab="Time (days)", ylab=ylabel,
#        col=brewer.pal(9,"Set1"), mark.time=T)
#   legend("topright", legend=categNames,
#          col=brewer.pal(9,"Set1"),
#          lwd=2, cex=0.9)
# }
if(print_to_screen == TRUE) {
print("Chi-sq test:")
print(survdiff(surv_object~covariable_object,rho = 0))
print("Cox PH test:")
print(summary(coxph(surv_object~covariable_object)))
}
coxfit <- coxph(surv_object~covariable_object)
# if (plot_graph == TRUE) {
#   text(1000,0,labels=paste0("HR=",round(exp(summary(coxfit)$coefficients[1]),2),"; p=",
#                             round(summary(coxfit)$logtest[3],3)))
# }
survival_stats_table[i, 1]<- target_gene
survival_stats_table[i, 2]<- colnames(deletion_category_survival_target_gene[i+2])
survival_stats_table[i, 3]<- round(summary(coxfit)$logtest[3],2)
survival_stats_table[i, 4]<- round(summary(coxfit)$waldtest[3],2)
survival_stats_table[i, 5]<- round(summary(coxfit)$sctest[3],2)
survival_stats_table[i, 6]<- round(summary(coxfit)$coefficients[2],2)
survival_stats_table[i, 7]<- paste(rownames(fittedSurv_mean$matrix), collapse = " ") #categories
survival_stats_table[i, 8]<- paste(fittedSurv_mean$matrix[,5], collapse = " ") #mean
survival_stats_table[i, 9]<-  paste(fittedSurv_mean$matrix[,3], collapse = " ") #number of samples
}
return(survival_stats_table)
}
test_stats<- survival_statistics(deletion_category_survival_target_gene, print_to_screen = print_to_screen, plot_graph = plot_graph)
test_stats
test_stats<-lapply(test_function, function(x) survival_statistics(x, print_to_screen = print_to_screen, plot_graph = plot_graph))
test_stats<-lapply(test_function[[2]], function(x) survival_statistics(x, print_to_screen = print_to_screen, plot_graph = plot_graph))
test_function[[2]]
test_function[[1]]
test_stats<-lapply(test_function, function(x) survival_statistics(x, print_to_screen = print_to_screen, plot_graph = plot_graph))
deletion_category_survival_target_gene<- test_function[[1]]
test_stats<- survival_statistics(deletion_category_survival_target_gene, print_to_screen = print_to_screen, plot_graph = plot_graph)
deletion_category_survival_target_gene<- test_function[[1]]
deletion_category_survival_target_gene<- test_function[[2]]
test_stats<- survival_statistics(deletion_category_survival_target_gene, print_to_screen = print_to_screen, plot_graph = plot_graph)
test_stats
deletion_category_survival_target_gene<- test_function[[1]]
deletion_category_survival_target_gene<- test_function[[1]]
death_time<- deletion_category_survival_target_gene[,1]
death_event<- deletion_category_survival_target_gene[,2]
surv_object<- Surv(death_time, death_event==1)
survival_stats_table<- data.frame(matrix(NA, ncol = 9, nrow = ncol(deletion_category_survival_target_gene) -2))
names(survival_stats_table)<-c("target_gene", "proximal_gene", "p-value_Likelihood_ratio_test",
"p-value_Wald_test", "p-value_logrank_test", "Hazard_ratio", "Categories",
"mean_survival", "number_of_samples_per_category")
i=1
surv_object
death_time
death_event
surv_object
survival_stats_table<- data.frame(matrix(NA, ncol = 9, nrow = ncol(deletion_category_survival_target_gene) -2))
names(survival_stats_table)<-c("target_gene", "proximal_gene", "p-value_Likelihood_ratio_test",
"p-value_Wald_test", "p-value_logrank_test", "Hazard_ratio", "Categories",
"mean_survival", "number_of_samples_per_category")
dim(survival_stats_table)
i
covariable_object<- deletion_category_survival_target_gene[,i+2]
covariable_object
fittedSurv <- survfit(surv_object~covariable_object, na.action = na.exclude)
fittedSurv
fittedSurv_mean<- survival:::survmean(fittedSurv, rmean="individual")
fittedSurv_mean
df.categ <- cbind(sapply(names(fittedSurv$strata), function(x) strsplit(x,"=")[[1]][2]),
fittedSurv$n)
df.categ <- data.frame(df.categ)
df.categ
categNames <- apply(df.categ, 1, function(x) paste0(x[1]," (",x[2],")"))
categNames
print("Chi-sq test:")
print(survdiff(surv_object~covariable_object,rho = 0))
print("Cox PH test:")
print(summary(coxph(surv_object~covariable_object)))
coxfit <- coxph(surv_object~covariable_object)
coxfit
target_gene
colnames(deletion_category_survival_target_gene[i+2])
round(summary(coxfit)$logtest[3],2)
round(summary(coxfit)$waldtest[3],2)
round(summary(coxfit)$sctest[3],2)
round(summary(coxfit)$coefficients[2],2)
paste(rownames(fittedSurv_mean$matrix), collapse = " ")
fittedSurv_mean$matrix
paste(fittedSurv_mean$matrix[,5], collapse = " ")
fittedSurv_mean$matrix[,5]
fittedSurv_mean$matrix
nrow(fittedSurv_mean$matrix)
is.null(ncol(fittedSurv_mean$matrix))
fittedSurv_mean$matrix[5]
fittedSurv_mean$matrix[,3]
fittedSurv_mean$matrix[3]
fittedSurv_mean$matrix
round(summary(coxfit)$coefficients[2],2)
rownames(fittedSurv_mean$matrix)
unique(covariable_object)
survival_stats_table[i, 1]<- target_gene
survival_stats_table[i, 2]<- colnames(deletion_category_survival_target_gene[i+2])
survival_stats_table[i, 3]<- round(summary(coxfit)$logtest[3],2)
survival_stats_table[i, 4]<- round(summary(coxfit)$waldtest[3],2)
survival_stats_table[i, 5]<- round(summary(coxfit)$sctest[3],2)
survival_stats_table[i, 6]<- round(summary(coxfit)$coefficients[2],2)
if(is.null(ncol(fittedSurv_mean$matrix))){
survival_stats_table[i, 7]<- unique(covariable_object) #categories
survival_stats_table[i, 8]<- paste(fittedSurv_mean$matrix[5], collapse = " ") #mean
survival_stats_table[i, 9]<-  paste(fittedSurv_mean$matrix[3], collapse = " ") #number of samples
} else {
survival_stats_table[i, 7]<- paste(rownames(fittedSurv_mean$matrix), collapse = " ") #categories
survival_stats_table[i, 8]<- paste(fittedSurv_mean$matrix[,5], collapse = " ") #mean
survival_stats_table[i, 9]<-  paste(fittedSurv_mean$matrix[,3], collapse = " ") #number of samples
}
survival_stats_table
deletion_category_survival_target_gene<- test_function[[1]]
survival_statistics<- function(deletion_category_survival_target_gene, print_to_screen = print_to_screen, plot_graph = plot_graph){
death_time<- deletion_category_survival_target_gene[,1]
death_event<- deletion_category_survival_target_gene[,2]
##Create Surv object
surv_object<- Surv(death_time, death_event==1)
##Create empty table to store stats:
survival_stats_table<- data.frame(matrix(NA, ncol = 9, nrow = ncol(deletion_category_survival_target_gene) -2))
names(survival_stats_table)<-c("target_gene", "proximal_gene", "p-value_Likelihood_ratio_test",
"p-value_Wald_test", "p-value_logrank_test", "Hazard_ratio", "Categories",
"mean_survival", "number_of_samples_per_category")
for (i in 1:nrow(survival_stats_table)){
##Get covariable object for survfit:
covariable_object<- deletion_category_survival_target_gene[,i+2]
##Fit Kaplain meier graph to one co-variable to compare data with :
fittedSurv <- survfit(surv_object~covariable_object, na.action = na.exclude)
fittedSurv_mean<- survival:::survmean(fittedSurv, rmean="individual")
#survival:::survmean(fittedSurv, rmean="common")
df.categ <- cbind(sapply(names(fittedSurv$strata), function(x) strsplit(x,"=")[[1]][2]),
fittedSurv$n)
df.categ <- data.frame(df.categ)
##Get category names for one variable
categNames <- apply(df.categ, 1, function(x) paste0(x[1]," (",x[2],")"))
# if (plot_graph == TRUE) {
#   plot(fittedSurv, main=plotTitle,
#        xlab="Time (days)", ylab=ylabel,
#        col=brewer.pal(9,"Set1"), mark.time=T)
#   legend("topright", legend=categNames,
#          col=brewer.pal(9,"Set1"),
#          lwd=2, cex=0.9)
# }
if(print_to_screen == TRUE) {
print("Chi-sq test:")
print(survdiff(surv_object~covariable_object,rho = 0))
print("Cox PH test:")
print(summary(coxph(surv_object~covariable_object)))
}
coxfit <- coxph(surv_object~covariable_object)
# if (plot_graph == TRUE) {
#   text(1000,0,labels=paste0("HR=",round(exp(summary(coxfit)$coefficients[1]),2),"; p=",
#                             round(summary(coxfit)$logtest[3],3)))
# }
survival_stats_table[i, 1]<- target_gene
survival_stats_table[i, 2]<- colnames(deletion_category_survival_target_gene[i+2])
survival_stats_table[i, 3]<- round(summary(coxfit)$logtest[3],2)
survival_stats_table[i, 4]<- round(summary(coxfit)$waldtest[3],2)
survival_stats_table[i, 5]<- round(summary(coxfit)$sctest[3],2)
survival_stats_table[i, 6]<- round(summary(coxfit)$coefficients[2],2)
if(is.null(ncol(fittedSurv_mean$matrix))){
survival_stats_table[i, 7]<- unique(covariable_object) #categories
survival_stats_table[i, 8]<- paste(fittedSurv_mean$matrix[5], collapse = " ") #mean
survival_stats_table[i, 9]<-  paste(fittedSurv_mean$matrix[3], collapse = " ") #number of samples
} else {
survival_stats_table[i, 7]<- paste(rownames(fittedSurv_mean$matrix), collapse = " ") #categories
survival_stats_table[i, 8]<- paste(fittedSurv_mean$matrix[,5], collapse = " ") #mean
survival_stats_table[i, 9]<-  paste(fittedSurv_mean$matrix[,3], collapse = " ") #number of samples
}
}
return(survival_stats_table)
}
deletion_category_survival_target_gene<- test_function[[1]]
test_stats<- survival_statistics(deletion_category_survival_target_gene, print_to_screen = print_to_screen, plot_graph = plot_graph)
test_stats
test_stats<-lapply(test_function, function(x) survival_statistics(x, print_to_screen = print_to_screen, plot_graph = plot_graph))
test_stats
